// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: AppMsg.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_AppMsg_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_AppMsg_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3009000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3009000 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_AppMsg_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_AppMsg_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[19]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_AppMsg_2eproto;
namespace proto {
class AppMsg;
class AppMsgDefaultTypeInternal;
extern AppMsgDefaultTypeInternal _AppMsg_default_instance_;
class AppMsg_abnormal_param;
class AppMsg_abnormal_paramDefaultTypeInternal;
extern AppMsg_abnormal_paramDefaultTypeInternal _AppMsg_abnormal_param_default_instance_;
class AppMsg_adc_data;
class AppMsg_adc_dataDefaultTypeInternal;
extern AppMsg_adc_dataDefaultTypeInternal _AppMsg_adc_data_default_instance_;
class AppMsg_axis_counting_param;
class AppMsg_axis_counting_paramDefaultTypeInternal;
extern AppMsg_axis_counting_paramDefaultTypeInternal _AppMsg_axis_counting_param_default_instance_;
class AppMsg_channel_info;
class AppMsg_channel_infoDefaultTypeInternal;
extern AppMsg_channel_infoDefaultTypeInternal _AppMsg_channel_info_default_instance_;
class AppMsg_device_add;
class AppMsg_device_addDefaultTypeInternal;
extern AppMsg_device_addDefaultTypeInternal _AppMsg_device_add_default_instance_;
class AppMsg_fault_voltage;
class AppMsg_fault_voltageDefaultTypeInternal;
extern AppMsg_fault_voltageDefaultTypeInternal _AppMsg_fault_voltage_default_instance_;
class AppMsg_full_scale;
class AppMsg_full_scaleDefaultTypeInternal;
extern AppMsg_full_scaleDefaultTypeInternal _AppMsg_full_scale_default_instance_;
class AppMsg_item_id;
class AppMsg_item_idDefaultTypeInternal;
extern AppMsg_item_idDefaultTypeInternal _AppMsg_item_id_default_instance_;
class AppMsg_judgement_mode;
class AppMsg_judgement_modeDefaultTypeInternal;
extern AppMsg_judgement_modeDefaultTypeInternal _AppMsg_judgement_mode_default_instance_;
class AppMsg_platform_id;
class AppMsg_platform_idDefaultTypeInternal;
extern AppMsg_platform_idDefaultTypeInternal _AppMsg_platform_id_default_instance_;
class AppMsg_pzltrct_param;
class AppMsg_pzltrct_paramDefaultTypeInternal;
extern AppMsg_pzltrct_paramDefaultTypeInternal _AppMsg_pzltrct_param_default_instance_;
class AppMsg_sample_card_num;
class AppMsg_sample_card_numDefaultTypeInternal;
extern AppMsg_sample_card_numDefaultTypeInternal _AppMsg_sample_card_num_default_instance_;
class AppMsg_sample_frequency;
class AppMsg_sample_frequencyDefaultTypeInternal;
extern AppMsg_sample_frequencyDefaultTypeInternal _AppMsg_sample_frequency_default_instance_;
class AppMsg_sensor_id;
class AppMsg_sensor_idDefaultTypeInternal;
extern AppMsg_sensor_idDefaultTypeInternal _AppMsg_sensor_id_default_instance_;
class AppMsg_server_add;
class AppMsg_server_addDefaultTypeInternal;
extern AppMsg_server_addDefaultTypeInternal _AppMsg_server_add_default_instance_;
class AppMsg_station_id;
class AppMsg_station_idDefaultTypeInternal;
extern AppMsg_station_idDefaultTypeInternal _AppMsg_station_id_default_instance_;
class AppMsg_turnout_id;
class AppMsg_turnout_idDefaultTypeInternal;
extern AppMsg_turnout_idDefaultTypeInternal _AppMsg_turnout_id_default_instance_;
class AppMsg_zero_offset;
class AppMsg_zero_offsetDefaultTypeInternal;
extern AppMsg_zero_offsetDefaultTypeInternal _AppMsg_zero_offset_default_instance_;
}  // namespace proto
PROTOBUF_NAMESPACE_OPEN
template<> ::proto::AppMsg* Arena::CreateMaybeMessage<::proto::AppMsg>(Arena*);
template<> ::proto::AppMsg_abnormal_param* Arena::CreateMaybeMessage<::proto::AppMsg_abnormal_param>(Arena*);
template<> ::proto::AppMsg_adc_data* Arena::CreateMaybeMessage<::proto::AppMsg_adc_data>(Arena*);
template<> ::proto::AppMsg_axis_counting_param* Arena::CreateMaybeMessage<::proto::AppMsg_axis_counting_param>(Arena*);
template<> ::proto::AppMsg_channel_info* Arena::CreateMaybeMessage<::proto::AppMsg_channel_info>(Arena*);
template<> ::proto::AppMsg_device_add* Arena::CreateMaybeMessage<::proto::AppMsg_device_add>(Arena*);
template<> ::proto::AppMsg_fault_voltage* Arena::CreateMaybeMessage<::proto::AppMsg_fault_voltage>(Arena*);
template<> ::proto::AppMsg_full_scale* Arena::CreateMaybeMessage<::proto::AppMsg_full_scale>(Arena*);
template<> ::proto::AppMsg_item_id* Arena::CreateMaybeMessage<::proto::AppMsg_item_id>(Arena*);
template<> ::proto::AppMsg_judgement_mode* Arena::CreateMaybeMessage<::proto::AppMsg_judgement_mode>(Arena*);
template<> ::proto::AppMsg_platform_id* Arena::CreateMaybeMessage<::proto::AppMsg_platform_id>(Arena*);
template<> ::proto::AppMsg_pzltrct_param* Arena::CreateMaybeMessage<::proto::AppMsg_pzltrct_param>(Arena*);
template<> ::proto::AppMsg_sample_card_num* Arena::CreateMaybeMessage<::proto::AppMsg_sample_card_num>(Arena*);
template<> ::proto::AppMsg_sample_frequency* Arena::CreateMaybeMessage<::proto::AppMsg_sample_frequency>(Arena*);
template<> ::proto::AppMsg_sensor_id* Arena::CreateMaybeMessage<::proto::AppMsg_sensor_id>(Arena*);
template<> ::proto::AppMsg_server_add* Arena::CreateMaybeMessage<::proto::AppMsg_server_add>(Arena*);
template<> ::proto::AppMsg_station_id* Arena::CreateMaybeMessage<::proto::AppMsg_station_id>(Arena*);
template<> ::proto::AppMsg_turnout_id* Arena::CreateMaybeMessage<::proto::AppMsg_turnout_id>(Arena*);
template<> ::proto::AppMsg_zero_offset* Arena::CreateMaybeMessage<::proto::AppMsg_zero_offset>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace proto {

enum AppMsg_Cmd : int {
  AppMsg_Cmd_NONE = 0,
  AppMsg_Cmd_RESERVED = 10,
  AppMsg_Cmd_set_device_add = 11,
  AppMsg_Cmd_get_device_add = 12,
  AppMsg_Cmd_set_server_add = 13,
  AppMsg_Cmd_get_server_add = 14,
  AppMsg_Cmd_set_platform_id = 15,
  AppMsg_Cmd_get_platform_id = 16,
  AppMsg_Cmd_set_station_id = 17,
  AppMsg_Cmd_get_station_id = 18,
  AppMsg_Cmd_set_turnout_id = 19,
  AppMsg_Cmd_get_turnout_id = 20,
  AppMsg_Cmd_set_item_id = 21,
  AppMsg_Cmd_get_item_id = 22,
  AppMsg_Cmd_set_sensor_id = 23,
  AppMsg_Cmd_get_sensor_id = 24,
  AppMsg_Cmd_set_sample_frequency = 25,
  AppMsg_Cmd_get_sample_frequency = 26,
  AppMsg_Cmd_set_zero_offset = 27,
  AppMsg_Cmd_get_zero_offset = 28,
  AppMsg_Cmd_set_fault_voltage = 29,
  AppMsg_Cmd_get_fault_voltage = 30,
  AppMsg_Cmd_set_abnormal_param = 31,
  AppMsg_Cmd_get_abnormal_param = 32,
  AppMsg_Cmd_set_full_scale = 33,
  AppMsg_Cmd_get_full_scale = 34,
  AppMsg_Cmd_set_judgement_mode = 35,
  AppMsg_Cmd_get_judgement_mode = 36,
  AppMsg_Cmd_set_pzltrct_param = 37,
  AppMsg_Cmd_get_pzltrct_param = 38,
  AppMsg_Cmd_set_axis_counting_param = 39,
  AppMsg_Cmd_get_axis_counting_param = 40,
  AppMsg_Cmd_set_sample_card_num = 41,
  AppMsg_Cmd_get_sample_card_num = 42,
  AppMsg_Cmd_capture_adc_data = 43,
  AppMsg_Cmd_set_capture_auto_state = 44,
  AppMsg_Cmd_get_capture_auto_state = 45,
  AppMsg_Cmd_set_channel_info = 46,
  AppMsg_Cmd_get_channel_info = 47,
  AppMsg_Cmd_auto_adc_data = 1000,
  AppMsg_Cmd_error_msg = 1001,
  AppMsg_Cmd_AppMsg_Cmd_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::min(),
  AppMsg_Cmd_AppMsg_Cmd_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::max()
};
bool AppMsg_Cmd_IsValid(int value);
constexpr AppMsg_Cmd AppMsg_Cmd_Cmd_MIN = AppMsg_Cmd_NONE;
constexpr AppMsg_Cmd AppMsg_Cmd_Cmd_MAX = AppMsg_Cmd_error_msg;
constexpr int AppMsg_Cmd_Cmd_ARRAYSIZE = AppMsg_Cmd_Cmd_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* AppMsg_Cmd_descriptor();
template<typename T>
inline const std::string& AppMsg_Cmd_Name(T enum_t_value) {
  static_assert(::std::is_same<T, AppMsg_Cmd>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function AppMsg_Cmd_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    AppMsg_Cmd_descriptor(), enum_t_value);
}
inline bool AppMsg_Cmd_Parse(
    const std::string& name, AppMsg_Cmd* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<AppMsg_Cmd>(
    AppMsg_Cmd_descriptor(), name, value);
}
// ===================================================================

class AppMsg_device_add :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:proto.AppMsg.device_add) */ {
 public:
  AppMsg_device_add();
  virtual ~AppMsg_device_add();

  AppMsg_device_add(const AppMsg_device_add& from);
  AppMsg_device_add(AppMsg_device_add&& from) noexcept
    : AppMsg_device_add() {
    *this = ::std::move(from);
  }

  inline AppMsg_device_add& operator=(const AppMsg_device_add& from) {
    CopyFrom(from);
    return *this;
  }
  inline AppMsg_device_add& operator=(AppMsg_device_add&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const AppMsg_device_add& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AppMsg_device_add* internal_default_instance() {
    return reinterpret_cast<const AppMsg_device_add*>(
               &_AppMsg_device_add_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(AppMsg_device_add& a, AppMsg_device_add& b) {
    a.Swap(&b);
  }
  inline void Swap(AppMsg_device_add* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline AppMsg_device_add* New() const final {
    return CreateMaybeMessage<AppMsg_device_add>(nullptr);
  }

  AppMsg_device_add* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<AppMsg_device_add>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const AppMsg_device_add& from);
  void MergeFrom(const AppMsg_device_add& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AppMsg_device_add* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "proto.AppMsg.device_add";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_AppMsg_2eproto);
    return ::descriptor_table_AppMsg_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kIpFieldNumber = 1,
    kNetmaskFieldNumber = 2,
    kGatewayFieldNumber = 3,
  };
  // string ip = 1;
  void clear_ip();
  const std::string& ip() const;
  void set_ip(const std::string& value);
  void set_ip(std::string&& value);
  void set_ip(const char* value);
  void set_ip(const char* value, size_t size);
  std::string* mutable_ip();
  std::string* release_ip();
  void set_allocated_ip(std::string* ip);

  // string netmask = 2;
  void clear_netmask();
  const std::string& netmask() const;
  void set_netmask(const std::string& value);
  void set_netmask(std::string&& value);
  void set_netmask(const char* value);
  void set_netmask(const char* value, size_t size);
  std::string* mutable_netmask();
  std::string* release_netmask();
  void set_allocated_netmask(std::string* netmask);

  // string gateway = 3;
  void clear_gateway();
  const std::string& gateway() const;
  void set_gateway(const std::string& value);
  void set_gateway(std::string&& value);
  void set_gateway(const char* value);
  void set_gateway(const char* value, size_t size);
  std::string* mutable_gateway();
  std::string* release_gateway();
  void set_allocated_gateway(std::string* gateway);

  // @@protoc_insertion_point(class_scope:proto.AppMsg.device_add)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr ip_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr netmask_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr gateway_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_AppMsg_2eproto;
};
// -------------------------------------------------------------------

class AppMsg_server_add :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:proto.AppMsg.server_add) */ {
 public:
  AppMsg_server_add();
  virtual ~AppMsg_server_add();

  AppMsg_server_add(const AppMsg_server_add& from);
  AppMsg_server_add(AppMsg_server_add&& from) noexcept
    : AppMsg_server_add() {
    *this = ::std::move(from);
  }

  inline AppMsg_server_add& operator=(const AppMsg_server_add& from) {
    CopyFrom(from);
    return *this;
  }
  inline AppMsg_server_add& operator=(AppMsg_server_add&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const AppMsg_server_add& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AppMsg_server_add* internal_default_instance() {
    return reinterpret_cast<const AppMsg_server_add*>(
               &_AppMsg_server_add_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(AppMsg_server_add& a, AppMsg_server_add& b) {
    a.Swap(&b);
  }
  inline void Swap(AppMsg_server_add* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline AppMsg_server_add* New() const final {
    return CreateMaybeMessage<AppMsg_server_add>(nullptr);
  }

  AppMsg_server_add* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<AppMsg_server_add>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const AppMsg_server_add& from);
  void MergeFrom(const AppMsg_server_add& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AppMsg_server_add* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "proto.AppMsg.server_add";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_AppMsg_2eproto);
    return ::descriptor_table_AppMsg_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kIpFieldNumber = 1,
    kPortFieldNumber = 2,
  };
  // string ip = 1;
  void clear_ip();
  const std::string& ip() const;
  void set_ip(const std::string& value);
  void set_ip(std::string&& value);
  void set_ip(const char* value);
  void set_ip(const char* value, size_t size);
  std::string* mutable_ip();
  std::string* release_ip();
  void set_allocated_ip(std::string* ip);

  // uint32 port = 2;
  void clear_port();
  ::PROTOBUF_NAMESPACE_ID::uint32 port() const;
  void set_port(::PROTOBUF_NAMESPACE_ID::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.AppMsg.server_add)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr ip_;
  ::PROTOBUF_NAMESPACE_ID::uint32 port_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_AppMsg_2eproto;
};
// -------------------------------------------------------------------

class AppMsg_platform_id :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:proto.AppMsg.platform_id) */ {
 public:
  AppMsg_platform_id();
  virtual ~AppMsg_platform_id();

  AppMsg_platform_id(const AppMsg_platform_id& from);
  AppMsg_platform_id(AppMsg_platform_id&& from) noexcept
    : AppMsg_platform_id() {
    *this = ::std::move(from);
  }

  inline AppMsg_platform_id& operator=(const AppMsg_platform_id& from) {
    CopyFrom(from);
    return *this;
  }
  inline AppMsg_platform_id& operator=(AppMsg_platform_id&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const AppMsg_platform_id& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AppMsg_platform_id* internal_default_instance() {
    return reinterpret_cast<const AppMsg_platform_id*>(
               &_AppMsg_platform_id_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(AppMsg_platform_id& a, AppMsg_platform_id& b) {
    a.Swap(&b);
  }
  inline void Swap(AppMsg_platform_id* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline AppMsg_platform_id* New() const final {
    return CreateMaybeMessage<AppMsg_platform_id>(nullptr);
  }

  AppMsg_platform_id* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<AppMsg_platform_id>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const AppMsg_platform_id& from);
  void MergeFrom(const AppMsg_platform_id& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AppMsg_platform_id* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "proto.AppMsg.platform_id";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_AppMsg_2eproto);
    return ::descriptor_table_AppMsg_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kIdFieldNumber = 1,
  };
  // uint32 id = 1;
  void clear_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 id() const;
  void set_id(::PROTOBUF_NAMESPACE_ID::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.AppMsg.platform_id)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::uint32 id_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_AppMsg_2eproto;
};
// -------------------------------------------------------------------

class AppMsg_station_id :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:proto.AppMsg.station_id) */ {
 public:
  AppMsg_station_id();
  virtual ~AppMsg_station_id();

  AppMsg_station_id(const AppMsg_station_id& from);
  AppMsg_station_id(AppMsg_station_id&& from) noexcept
    : AppMsg_station_id() {
    *this = ::std::move(from);
  }

  inline AppMsg_station_id& operator=(const AppMsg_station_id& from) {
    CopyFrom(from);
    return *this;
  }
  inline AppMsg_station_id& operator=(AppMsg_station_id&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const AppMsg_station_id& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AppMsg_station_id* internal_default_instance() {
    return reinterpret_cast<const AppMsg_station_id*>(
               &_AppMsg_station_id_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(AppMsg_station_id& a, AppMsg_station_id& b) {
    a.Swap(&b);
  }
  inline void Swap(AppMsg_station_id* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline AppMsg_station_id* New() const final {
    return CreateMaybeMessage<AppMsg_station_id>(nullptr);
  }

  AppMsg_station_id* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<AppMsg_station_id>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const AppMsg_station_id& from);
  void MergeFrom(const AppMsg_station_id& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AppMsg_station_id* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "proto.AppMsg.station_id";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_AppMsg_2eproto);
    return ::descriptor_table_AppMsg_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kIdFieldNumber = 1,
  };
  // uint32 id = 1;
  void clear_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 id() const;
  void set_id(::PROTOBUF_NAMESPACE_ID::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.AppMsg.station_id)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::uint32 id_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_AppMsg_2eproto;
};
// -------------------------------------------------------------------

class AppMsg_turnout_id :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:proto.AppMsg.turnout_id) */ {
 public:
  AppMsg_turnout_id();
  virtual ~AppMsg_turnout_id();

  AppMsg_turnout_id(const AppMsg_turnout_id& from);
  AppMsg_turnout_id(AppMsg_turnout_id&& from) noexcept
    : AppMsg_turnout_id() {
    *this = ::std::move(from);
  }

  inline AppMsg_turnout_id& operator=(const AppMsg_turnout_id& from) {
    CopyFrom(from);
    return *this;
  }
  inline AppMsg_turnout_id& operator=(AppMsg_turnout_id&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const AppMsg_turnout_id& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AppMsg_turnout_id* internal_default_instance() {
    return reinterpret_cast<const AppMsg_turnout_id*>(
               &_AppMsg_turnout_id_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(AppMsg_turnout_id& a, AppMsg_turnout_id& b) {
    a.Swap(&b);
  }
  inline void Swap(AppMsg_turnout_id* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline AppMsg_turnout_id* New() const final {
    return CreateMaybeMessage<AppMsg_turnout_id>(nullptr);
  }

  AppMsg_turnout_id* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<AppMsg_turnout_id>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const AppMsg_turnout_id& from);
  void MergeFrom(const AppMsg_turnout_id& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AppMsg_turnout_id* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "proto.AppMsg.turnout_id";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_AppMsg_2eproto);
    return ::descriptor_table_AppMsg_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kIdFieldNumber = 1,
  };
  // uint32 id = 1;
  void clear_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 id() const;
  void set_id(::PROTOBUF_NAMESPACE_ID::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.AppMsg.turnout_id)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::uint32 id_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_AppMsg_2eproto;
};
// -------------------------------------------------------------------

class AppMsg_item_id :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:proto.AppMsg.item_id) */ {
 public:
  AppMsg_item_id();
  virtual ~AppMsg_item_id();

  AppMsg_item_id(const AppMsg_item_id& from);
  AppMsg_item_id(AppMsg_item_id&& from) noexcept
    : AppMsg_item_id() {
    *this = ::std::move(from);
  }

  inline AppMsg_item_id& operator=(const AppMsg_item_id& from) {
    CopyFrom(from);
    return *this;
  }
  inline AppMsg_item_id& operator=(AppMsg_item_id&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const AppMsg_item_id& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AppMsg_item_id* internal_default_instance() {
    return reinterpret_cast<const AppMsg_item_id*>(
               &_AppMsg_item_id_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(AppMsg_item_id& a, AppMsg_item_id& b) {
    a.Swap(&b);
  }
  inline void Swap(AppMsg_item_id* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline AppMsg_item_id* New() const final {
    return CreateMaybeMessage<AppMsg_item_id>(nullptr);
  }

  AppMsg_item_id* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<AppMsg_item_id>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const AppMsg_item_id& from);
  void MergeFrom(const AppMsg_item_id& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AppMsg_item_id* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "proto.AppMsg.item_id";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_AppMsg_2eproto);
    return ::descriptor_table_AppMsg_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kIdFieldNumber = 1,
  };
  // uint32 id = 1;
  void clear_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 id() const;
  void set_id(::PROTOBUF_NAMESPACE_ID::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.AppMsg.item_id)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::uint32 id_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_AppMsg_2eproto;
};
// -------------------------------------------------------------------

class AppMsg_sensor_id :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:proto.AppMsg.sensor_id) */ {
 public:
  AppMsg_sensor_id();
  virtual ~AppMsg_sensor_id();

  AppMsg_sensor_id(const AppMsg_sensor_id& from);
  AppMsg_sensor_id(AppMsg_sensor_id&& from) noexcept
    : AppMsg_sensor_id() {
    *this = ::std::move(from);
  }

  inline AppMsg_sensor_id& operator=(const AppMsg_sensor_id& from) {
    CopyFrom(from);
    return *this;
  }
  inline AppMsg_sensor_id& operator=(AppMsg_sensor_id&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const AppMsg_sensor_id& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AppMsg_sensor_id* internal_default_instance() {
    return reinterpret_cast<const AppMsg_sensor_id*>(
               &_AppMsg_sensor_id_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  friend void swap(AppMsg_sensor_id& a, AppMsg_sensor_id& b) {
    a.Swap(&b);
  }
  inline void Swap(AppMsg_sensor_id* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline AppMsg_sensor_id* New() const final {
    return CreateMaybeMessage<AppMsg_sensor_id>(nullptr);
  }

  AppMsg_sensor_id* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<AppMsg_sensor_id>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const AppMsg_sensor_id& from);
  void MergeFrom(const AppMsg_sensor_id& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AppMsg_sensor_id* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "proto.AppMsg.sensor_id";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_AppMsg_2eproto);
    return ::descriptor_table_AppMsg_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kChannelFieldNumber = 1,
    kIdFieldNumber = 2,
  };
  // uint32 channel = 1;
  void clear_channel();
  ::PROTOBUF_NAMESPACE_ID::uint32 channel() const;
  void set_channel(::PROTOBUF_NAMESPACE_ID::uint32 value);

  // uint32 id = 2;
  void clear_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 id() const;
  void set_id(::PROTOBUF_NAMESPACE_ID::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.AppMsg.sensor_id)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::uint32 channel_;
  ::PROTOBUF_NAMESPACE_ID::uint32 id_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_AppMsg_2eproto;
};
// -------------------------------------------------------------------

class AppMsg_sample_frequency :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:proto.AppMsg.sample_frequency) */ {
 public:
  AppMsg_sample_frequency();
  virtual ~AppMsg_sample_frequency();

  AppMsg_sample_frequency(const AppMsg_sample_frequency& from);
  AppMsg_sample_frequency(AppMsg_sample_frequency&& from) noexcept
    : AppMsg_sample_frequency() {
    *this = ::std::move(from);
  }

  inline AppMsg_sample_frequency& operator=(const AppMsg_sample_frequency& from) {
    CopyFrom(from);
    return *this;
  }
  inline AppMsg_sample_frequency& operator=(AppMsg_sample_frequency&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const AppMsg_sample_frequency& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AppMsg_sample_frequency* internal_default_instance() {
    return reinterpret_cast<const AppMsg_sample_frequency*>(
               &_AppMsg_sample_frequency_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  friend void swap(AppMsg_sample_frequency& a, AppMsg_sample_frequency& b) {
    a.Swap(&b);
  }
  inline void Swap(AppMsg_sample_frequency* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline AppMsg_sample_frequency* New() const final {
    return CreateMaybeMessage<AppMsg_sample_frequency>(nullptr);
  }

  AppMsg_sample_frequency* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<AppMsg_sample_frequency>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const AppMsg_sample_frequency& from);
  void MergeFrom(const AppMsg_sample_frequency& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AppMsg_sample_frequency* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "proto.AppMsg.sample_frequency";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_AppMsg_2eproto);
    return ::descriptor_table_AppMsg_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kFrequencyFieldNumber = 1,
  };
  // uint32 frequency = 1;
  void clear_frequency();
  ::PROTOBUF_NAMESPACE_ID::uint32 frequency() const;
  void set_frequency(::PROTOBUF_NAMESPACE_ID::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.AppMsg.sample_frequency)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::uint32 frequency_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_AppMsg_2eproto;
};
// -------------------------------------------------------------------

class AppMsg_zero_offset :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:proto.AppMsg.zero_offset) */ {
 public:
  AppMsg_zero_offset();
  virtual ~AppMsg_zero_offset();

  AppMsg_zero_offset(const AppMsg_zero_offset& from);
  AppMsg_zero_offset(AppMsg_zero_offset&& from) noexcept
    : AppMsg_zero_offset() {
    *this = ::std::move(from);
  }

  inline AppMsg_zero_offset& operator=(const AppMsg_zero_offset& from) {
    CopyFrom(from);
    return *this;
  }
  inline AppMsg_zero_offset& operator=(AppMsg_zero_offset&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const AppMsg_zero_offset& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AppMsg_zero_offset* internal_default_instance() {
    return reinterpret_cast<const AppMsg_zero_offset*>(
               &_AppMsg_zero_offset_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  friend void swap(AppMsg_zero_offset& a, AppMsg_zero_offset& b) {
    a.Swap(&b);
  }
  inline void Swap(AppMsg_zero_offset* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline AppMsg_zero_offset* New() const final {
    return CreateMaybeMessage<AppMsg_zero_offset>(nullptr);
  }

  AppMsg_zero_offset* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<AppMsg_zero_offset>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const AppMsg_zero_offset& from);
  void MergeFrom(const AppMsg_zero_offset& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AppMsg_zero_offset* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "proto.AppMsg.zero_offset";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_AppMsg_2eproto);
    return ::descriptor_table_AppMsg_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kChannelFieldNumber = 1,
    kOffsetFieldNumber = 2,
  };
  // uint32 channel = 1;
  void clear_channel();
  ::PROTOBUF_NAMESPACE_ID::uint32 channel() const;
  void set_channel(::PROTOBUF_NAMESPACE_ID::uint32 value);

  // uint32 offset = 2;
  void clear_offset();
  ::PROTOBUF_NAMESPACE_ID::uint32 offset() const;
  void set_offset(::PROTOBUF_NAMESPACE_ID::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.AppMsg.zero_offset)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::uint32 channel_;
  ::PROTOBUF_NAMESPACE_ID::uint32 offset_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_AppMsg_2eproto;
};
// -------------------------------------------------------------------

class AppMsg_fault_voltage :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:proto.AppMsg.fault_voltage) */ {
 public:
  AppMsg_fault_voltage();
  virtual ~AppMsg_fault_voltage();

  AppMsg_fault_voltage(const AppMsg_fault_voltage& from);
  AppMsg_fault_voltage(AppMsg_fault_voltage&& from) noexcept
    : AppMsg_fault_voltage() {
    *this = ::std::move(from);
  }

  inline AppMsg_fault_voltage& operator=(const AppMsg_fault_voltage& from) {
    CopyFrom(from);
    return *this;
  }
  inline AppMsg_fault_voltage& operator=(AppMsg_fault_voltage&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const AppMsg_fault_voltage& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AppMsg_fault_voltage* internal_default_instance() {
    return reinterpret_cast<const AppMsg_fault_voltage*>(
               &_AppMsg_fault_voltage_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  friend void swap(AppMsg_fault_voltage& a, AppMsg_fault_voltage& b) {
    a.Swap(&b);
  }
  inline void Swap(AppMsg_fault_voltage* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline AppMsg_fault_voltage* New() const final {
    return CreateMaybeMessage<AppMsg_fault_voltage>(nullptr);
  }

  AppMsg_fault_voltage* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<AppMsg_fault_voltage>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const AppMsg_fault_voltage& from);
  void MergeFrom(const AppMsg_fault_voltage& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AppMsg_fault_voltage* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "proto.AppMsg.fault_voltage";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_AppMsg_2eproto);
    return ::descriptor_table_AppMsg_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kLevelFieldNumber = 1,
  };
  // double level = 1;
  void clear_level();
  double level() const;
  void set_level(double value);

  // @@protoc_insertion_point(class_scope:proto.AppMsg.fault_voltage)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  double level_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_AppMsg_2eproto;
};
// -------------------------------------------------------------------

class AppMsg_abnormal_param :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:proto.AppMsg.abnormal_param) */ {
 public:
  AppMsg_abnormal_param();
  virtual ~AppMsg_abnormal_param();

  AppMsg_abnormal_param(const AppMsg_abnormal_param& from);
  AppMsg_abnormal_param(AppMsg_abnormal_param&& from) noexcept
    : AppMsg_abnormal_param() {
    *this = ::std::move(from);
  }

  inline AppMsg_abnormal_param& operator=(const AppMsg_abnormal_param& from) {
    CopyFrom(from);
    return *this;
  }
  inline AppMsg_abnormal_param& operator=(AppMsg_abnormal_param&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const AppMsg_abnormal_param& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AppMsg_abnormal_param* internal_default_instance() {
    return reinterpret_cast<const AppMsg_abnormal_param*>(
               &_AppMsg_abnormal_param_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  friend void swap(AppMsg_abnormal_param& a, AppMsg_abnormal_param& b) {
    a.Swap(&b);
  }
  inline void Swap(AppMsg_abnormal_param* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline AppMsg_abnormal_param* New() const final {
    return CreateMaybeMessage<AppMsg_abnormal_param>(nullptr);
  }

  AppMsg_abnormal_param* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<AppMsg_abnormal_param>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const AppMsg_abnormal_param& from);
  void MergeFrom(const AppMsg_abnormal_param& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AppMsg_abnormal_param* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "proto.AppMsg.abnormal_param";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_AppMsg_2eproto);
    return ::descriptor_table_AppMsg_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kLevelFieldNumber = 1,
    kDurationFieldNumber = 2,
  };
  // double level = 1;
  void clear_level();
  double level() const;
  void set_level(double value);

  // uint32 duration = 2;
  void clear_duration();
  ::PROTOBUF_NAMESPACE_ID::uint32 duration() const;
  void set_duration(::PROTOBUF_NAMESPACE_ID::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.AppMsg.abnormal_param)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  double level_;
  ::PROTOBUF_NAMESPACE_ID::uint32 duration_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_AppMsg_2eproto;
};
// -------------------------------------------------------------------

class AppMsg_full_scale :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:proto.AppMsg.full_scale) */ {
 public:
  AppMsg_full_scale();
  virtual ~AppMsg_full_scale();

  AppMsg_full_scale(const AppMsg_full_scale& from);
  AppMsg_full_scale(AppMsg_full_scale&& from) noexcept
    : AppMsg_full_scale() {
    *this = ::std::move(from);
  }

  inline AppMsg_full_scale& operator=(const AppMsg_full_scale& from) {
    CopyFrom(from);
    return *this;
  }
  inline AppMsg_full_scale& operator=(AppMsg_full_scale&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const AppMsg_full_scale& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AppMsg_full_scale* internal_default_instance() {
    return reinterpret_cast<const AppMsg_full_scale*>(
               &_AppMsg_full_scale_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    11;

  friend void swap(AppMsg_full_scale& a, AppMsg_full_scale& b) {
    a.Swap(&b);
  }
  inline void Swap(AppMsg_full_scale* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline AppMsg_full_scale* New() const final {
    return CreateMaybeMessage<AppMsg_full_scale>(nullptr);
  }

  AppMsg_full_scale* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<AppMsg_full_scale>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const AppMsg_full_scale& from);
  void MergeFrom(const AppMsg_full_scale& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AppMsg_full_scale* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "proto.AppMsg.full_scale";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_AppMsg_2eproto);
    return ::descriptor_table_AppMsg_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kChannelFieldNumber = 1,
    kScaleFieldNumber = 2,
  };
  // uint32 channel = 1;
  void clear_channel();
  ::PROTOBUF_NAMESPACE_ID::uint32 channel() const;
  void set_channel(::PROTOBUF_NAMESPACE_ID::uint32 value);

  // int32 scale = 2;
  void clear_scale();
  ::PROTOBUF_NAMESPACE_ID::int32 scale() const;
  void set_scale(::PROTOBUF_NAMESPACE_ID::int32 value);

  // @@protoc_insertion_point(class_scope:proto.AppMsg.full_scale)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::uint32 channel_;
  ::PROTOBUF_NAMESPACE_ID::int32 scale_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_AppMsg_2eproto;
};
// -------------------------------------------------------------------

class AppMsg_judgement_mode :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:proto.AppMsg.judgement_mode) */ {
 public:
  AppMsg_judgement_mode();
  virtual ~AppMsg_judgement_mode();

  AppMsg_judgement_mode(const AppMsg_judgement_mode& from);
  AppMsg_judgement_mode(AppMsg_judgement_mode&& from) noexcept
    : AppMsg_judgement_mode() {
    *this = ::std::move(from);
  }

  inline AppMsg_judgement_mode& operator=(const AppMsg_judgement_mode& from) {
    CopyFrom(from);
    return *this;
  }
  inline AppMsg_judgement_mode& operator=(AppMsg_judgement_mode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const AppMsg_judgement_mode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AppMsg_judgement_mode* internal_default_instance() {
    return reinterpret_cast<const AppMsg_judgement_mode*>(
               &_AppMsg_judgement_mode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    12;

  friend void swap(AppMsg_judgement_mode& a, AppMsg_judgement_mode& b) {
    a.Swap(&b);
  }
  inline void Swap(AppMsg_judgement_mode* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline AppMsg_judgement_mode* New() const final {
    return CreateMaybeMessage<AppMsg_judgement_mode>(nullptr);
  }

  AppMsg_judgement_mode* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<AppMsg_judgement_mode>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const AppMsg_judgement_mode& from);
  void MergeFrom(const AppMsg_judgement_mode& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AppMsg_judgement_mode* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "proto.AppMsg.judgement_mode";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_AppMsg_2eproto);
    return ::descriptor_table_AppMsg_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kModeFieldNumber = 1,
  };
  // string mode = 1;
  void clear_mode();
  const std::string& mode() const;
  void set_mode(const std::string& value);
  void set_mode(std::string&& value);
  void set_mode(const char* value);
  void set_mode(const char* value, size_t size);
  std::string* mutable_mode();
  std::string* release_mode();
  void set_allocated_mode(std::string* mode);

  // @@protoc_insertion_point(class_scope:proto.AppMsg.judgement_mode)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr mode_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_AppMsg_2eproto;
};
// -------------------------------------------------------------------

class AppMsg_pzltrct_param :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:proto.AppMsg.pzltrct_param) */ {
 public:
  AppMsg_pzltrct_param();
  virtual ~AppMsg_pzltrct_param();

  AppMsg_pzltrct_param(const AppMsg_pzltrct_param& from);
  AppMsg_pzltrct_param(AppMsg_pzltrct_param&& from) noexcept
    : AppMsg_pzltrct_param() {
    *this = ::std::move(from);
  }

  inline AppMsg_pzltrct_param& operator=(const AppMsg_pzltrct_param& from) {
    CopyFrom(from);
    return *this;
  }
  inline AppMsg_pzltrct_param& operator=(AppMsg_pzltrct_param&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const AppMsg_pzltrct_param& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AppMsg_pzltrct_param* internal_default_instance() {
    return reinterpret_cast<const AppMsg_pzltrct_param*>(
               &_AppMsg_pzltrct_param_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    13;

  friend void swap(AppMsg_pzltrct_param& a, AppMsg_pzltrct_param& b) {
    a.Swap(&b);
  }
  inline void Swap(AppMsg_pzltrct_param* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline AppMsg_pzltrct_param* New() const final {
    return CreateMaybeMessage<AppMsg_pzltrct_param>(nullptr);
  }

  AppMsg_pzltrct_param* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<AppMsg_pzltrct_param>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const AppMsg_pzltrct_param& from);
  void MergeFrom(const AppMsg_pzltrct_param& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AppMsg_pzltrct_param* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "proto.AppMsg.pzltrct_param";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_AppMsg_2eproto);
    return ::descriptor_table_AppMsg_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kThresholdFieldNumber = 1,
    kDurationFieldNumber = 2,
  };
  // uint32 threshold = 1;
  void clear_threshold();
  ::PROTOBUF_NAMESPACE_ID::uint32 threshold() const;
  void set_threshold(::PROTOBUF_NAMESPACE_ID::uint32 value);

  // uint32 duration = 2;
  void clear_duration();
  ::PROTOBUF_NAMESPACE_ID::uint32 duration() const;
  void set_duration(::PROTOBUF_NAMESPACE_ID::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.AppMsg.pzltrct_param)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::uint32 threshold_;
  ::PROTOBUF_NAMESPACE_ID::uint32 duration_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_AppMsg_2eproto;
};
// -------------------------------------------------------------------

class AppMsg_axis_counting_param :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:proto.AppMsg.axis_counting_param) */ {
 public:
  AppMsg_axis_counting_param();
  virtual ~AppMsg_axis_counting_param();

  AppMsg_axis_counting_param(const AppMsg_axis_counting_param& from);
  AppMsg_axis_counting_param(AppMsg_axis_counting_param&& from) noexcept
    : AppMsg_axis_counting_param() {
    *this = ::std::move(from);
  }

  inline AppMsg_axis_counting_param& operator=(const AppMsg_axis_counting_param& from) {
    CopyFrom(from);
    return *this;
  }
  inline AppMsg_axis_counting_param& operator=(AppMsg_axis_counting_param&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const AppMsg_axis_counting_param& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AppMsg_axis_counting_param* internal_default_instance() {
    return reinterpret_cast<const AppMsg_axis_counting_param*>(
               &_AppMsg_axis_counting_param_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    14;

  friend void swap(AppMsg_axis_counting_param& a, AppMsg_axis_counting_param& b) {
    a.Swap(&b);
  }
  inline void Swap(AppMsg_axis_counting_param* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline AppMsg_axis_counting_param* New() const final {
    return CreateMaybeMessage<AppMsg_axis_counting_param>(nullptr);
  }

  AppMsg_axis_counting_param* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<AppMsg_axis_counting_param>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const AppMsg_axis_counting_param& from);
  void MergeFrom(const AppMsg_axis_counting_param& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AppMsg_axis_counting_param* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "proto.AppMsg.axis_counting_param";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_AppMsg_2eproto);
    return ::descriptor_table_AppMsg_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDurationFieldNumber = 1,
  };
  // uint32 duration = 1;
  void clear_duration();
  ::PROTOBUF_NAMESPACE_ID::uint32 duration() const;
  void set_duration(::PROTOBUF_NAMESPACE_ID::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.AppMsg.axis_counting_param)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::uint32 duration_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_AppMsg_2eproto;
};
// -------------------------------------------------------------------

class AppMsg_sample_card_num :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:proto.AppMsg.sample_card_num) */ {
 public:
  AppMsg_sample_card_num();
  virtual ~AppMsg_sample_card_num();

  AppMsg_sample_card_num(const AppMsg_sample_card_num& from);
  AppMsg_sample_card_num(AppMsg_sample_card_num&& from) noexcept
    : AppMsg_sample_card_num() {
    *this = ::std::move(from);
  }

  inline AppMsg_sample_card_num& operator=(const AppMsg_sample_card_num& from) {
    CopyFrom(from);
    return *this;
  }
  inline AppMsg_sample_card_num& operator=(AppMsg_sample_card_num&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const AppMsg_sample_card_num& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AppMsg_sample_card_num* internal_default_instance() {
    return reinterpret_cast<const AppMsg_sample_card_num*>(
               &_AppMsg_sample_card_num_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    15;

  friend void swap(AppMsg_sample_card_num& a, AppMsg_sample_card_num& b) {
    a.Swap(&b);
  }
  inline void Swap(AppMsg_sample_card_num* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline AppMsg_sample_card_num* New() const final {
    return CreateMaybeMessage<AppMsg_sample_card_num>(nullptr);
  }

  AppMsg_sample_card_num* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<AppMsg_sample_card_num>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const AppMsg_sample_card_num& from);
  void MergeFrom(const AppMsg_sample_card_num& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AppMsg_sample_card_num* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "proto.AppMsg.sample_card_num";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_AppMsg_2eproto);
    return ::descriptor_table_AppMsg_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNumFieldNumber = 1,
  };
  // uint32 num = 1;
  void clear_num();
  ::PROTOBUF_NAMESPACE_ID::uint32 num() const;
  void set_num(::PROTOBUF_NAMESPACE_ID::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.AppMsg.sample_card_num)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::uint32 num_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_AppMsg_2eproto;
};
// -------------------------------------------------------------------

class AppMsg_adc_data :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:proto.AppMsg.adc_data) */ {
 public:
  AppMsg_adc_data();
  virtual ~AppMsg_adc_data();

  AppMsg_adc_data(const AppMsg_adc_data& from);
  AppMsg_adc_data(AppMsg_adc_data&& from) noexcept
    : AppMsg_adc_data() {
    *this = ::std::move(from);
  }

  inline AppMsg_adc_data& operator=(const AppMsg_adc_data& from) {
    CopyFrom(from);
    return *this;
  }
  inline AppMsg_adc_data& operator=(AppMsg_adc_data&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const AppMsg_adc_data& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AppMsg_adc_data* internal_default_instance() {
    return reinterpret_cast<const AppMsg_adc_data*>(
               &_AppMsg_adc_data_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    16;

  friend void swap(AppMsg_adc_data& a, AppMsg_adc_data& b) {
    a.Swap(&b);
  }
  inline void Swap(AppMsg_adc_data* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline AppMsg_adc_data* New() const final {
    return CreateMaybeMessage<AppMsg_adc_data>(nullptr);
  }

  AppMsg_adc_data* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<AppMsg_adc_data>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const AppMsg_adc_data& from);
  void MergeFrom(const AppMsg_adc_data& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AppMsg_adc_data* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "proto.AppMsg.adc_data";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_AppMsg_2eproto);
    return ::descriptor_table_AppMsg_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDataFieldNumber = 9,
    kPlatformIdFieldNumber = 10,
    kStationIdFieldNumber = 11,
    kTurnoutIdFieldNumber = 12,
    kItemIdFieldNumber = 13,
    kTimeFieldNumber = 1,
    kSampleCardNumFieldNumber = 2,
    kSampleFrequencyFieldNumber = 3,
    kSampleNumberFieldNumber = 4,
  };
  // bytes data = 9;
  void clear_data();
  const std::string& data() const;
  void set_data(const std::string& value);
  void set_data(std::string&& value);
  void set_data(const char* value);
  void set_data(const void* value, size_t size);
  std::string* mutable_data();
  std::string* release_data();
  void set_allocated_data(std::string* data);

  // .proto.AppMsg.platform_id platform_id = 10;
  bool has_platform_id() const;
  void clear_platform_id();
  const ::proto::AppMsg_platform_id& platform_id() const;
  ::proto::AppMsg_platform_id* release_platform_id();
  ::proto::AppMsg_platform_id* mutable_platform_id();
  void set_allocated_platform_id(::proto::AppMsg_platform_id* platform_id);

  // .proto.AppMsg.station_id station_id = 11;
  bool has_station_id() const;
  void clear_station_id();
  const ::proto::AppMsg_station_id& station_id() const;
  ::proto::AppMsg_station_id* release_station_id();
  ::proto::AppMsg_station_id* mutable_station_id();
  void set_allocated_station_id(::proto::AppMsg_station_id* station_id);

  // .proto.AppMsg.turnout_id turnout_id = 12;
  bool has_turnout_id() const;
  void clear_turnout_id();
  const ::proto::AppMsg_turnout_id& turnout_id() const;
  ::proto::AppMsg_turnout_id* release_turnout_id();
  ::proto::AppMsg_turnout_id* mutable_turnout_id();
  void set_allocated_turnout_id(::proto::AppMsg_turnout_id* turnout_id);

  // .proto.AppMsg.item_id item_id = 13;
  bool has_item_id() const;
  void clear_item_id();
  const ::proto::AppMsg_item_id& item_id() const;
  ::proto::AppMsg_item_id* release_item_id();
  ::proto::AppMsg_item_id* mutable_item_id();
  void set_allocated_item_id(::proto::AppMsg_item_id* item_id);

  // uint64 time = 1;
  void clear_time();
  ::PROTOBUF_NAMESPACE_ID::uint64 time() const;
  void set_time(::PROTOBUF_NAMESPACE_ID::uint64 value);

  // uint32 sample_card_num = 2;
  void clear_sample_card_num();
  ::PROTOBUF_NAMESPACE_ID::uint32 sample_card_num() const;
  void set_sample_card_num(::PROTOBUF_NAMESPACE_ID::uint32 value);

  // uint32 sample_frequency = 3;
  void clear_sample_frequency();
  ::PROTOBUF_NAMESPACE_ID::uint32 sample_frequency() const;
  void set_sample_frequency(::PROTOBUF_NAMESPACE_ID::uint32 value);

  // uint32 sample_number = 4;
  void clear_sample_number();
  ::PROTOBUF_NAMESPACE_ID::uint32 sample_number() const;
  void set_sample_number(::PROTOBUF_NAMESPACE_ID::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.AppMsg.adc_data)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr data_;
  ::proto::AppMsg_platform_id* platform_id_;
  ::proto::AppMsg_station_id* station_id_;
  ::proto::AppMsg_turnout_id* turnout_id_;
  ::proto::AppMsg_item_id* item_id_;
  ::PROTOBUF_NAMESPACE_ID::uint64 time_;
  ::PROTOBUF_NAMESPACE_ID::uint32 sample_card_num_;
  ::PROTOBUF_NAMESPACE_ID::uint32 sample_frequency_;
  ::PROTOBUF_NAMESPACE_ID::uint32 sample_number_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_AppMsg_2eproto;
};
// -------------------------------------------------------------------

class AppMsg_channel_info :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:proto.AppMsg.channel_info) */ {
 public:
  AppMsg_channel_info();
  virtual ~AppMsg_channel_info();

  AppMsg_channel_info(const AppMsg_channel_info& from);
  AppMsg_channel_info(AppMsg_channel_info&& from) noexcept
    : AppMsg_channel_info() {
    *this = ::std::move(from);
  }

  inline AppMsg_channel_info& operator=(const AppMsg_channel_info& from) {
    CopyFrom(from);
    return *this;
  }
  inline AppMsg_channel_info& operator=(AppMsg_channel_info&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const AppMsg_channel_info& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AppMsg_channel_info* internal_default_instance() {
    return reinterpret_cast<const AppMsg_channel_info*>(
               &_AppMsg_channel_info_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    17;

  friend void swap(AppMsg_channel_info& a, AppMsg_channel_info& b) {
    a.Swap(&b);
  }
  inline void Swap(AppMsg_channel_info* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline AppMsg_channel_info* New() const final {
    return CreateMaybeMessage<AppMsg_channel_info>(nullptr);
  }

  AppMsg_channel_info* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<AppMsg_channel_info>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const AppMsg_channel_info& from);
  void MergeFrom(const AppMsg_channel_info& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AppMsg_channel_info* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "proto.AppMsg.channel_info";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_AppMsg_2eproto);
    return ::descriptor_table_AppMsg_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kZeroOffsetFieldNumber = 2,
    kFaultVoltageFieldNumber = 3,
    kAbnormalParamFieldNumber = 4,
    kFullScaleFieldNumber = 5,
    kJudgementModeFieldNumber = 6,
    kPzltrctParamFieldNumber = 7,
    kAxisCountingParamFieldNumber = 8,
    kChannelFieldNumber = 1,
  };
  // .proto.AppMsg.zero_offset zero_offset = 2;
  bool has_zero_offset() const;
  void clear_zero_offset();
  const ::proto::AppMsg_zero_offset& zero_offset() const;
  ::proto::AppMsg_zero_offset* release_zero_offset();
  ::proto::AppMsg_zero_offset* mutable_zero_offset();
  void set_allocated_zero_offset(::proto::AppMsg_zero_offset* zero_offset);

  // .proto.AppMsg.fault_voltage fault_voltage = 3;
  bool has_fault_voltage() const;
  void clear_fault_voltage();
  const ::proto::AppMsg_fault_voltage& fault_voltage() const;
  ::proto::AppMsg_fault_voltage* release_fault_voltage();
  ::proto::AppMsg_fault_voltage* mutable_fault_voltage();
  void set_allocated_fault_voltage(::proto::AppMsg_fault_voltage* fault_voltage);

  // .proto.AppMsg.abnormal_param abnormal_param = 4;
  bool has_abnormal_param() const;
  void clear_abnormal_param();
  const ::proto::AppMsg_abnormal_param& abnormal_param() const;
  ::proto::AppMsg_abnormal_param* release_abnormal_param();
  ::proto::AppMsg_abnormal_param* mutable_abnormal_param();
  void set_allocated_abnormal_param(::proto::AppMsg_abnormal_param* abnormal_param);

  // .proto.AppMsg.full_scale full_scale = 5;
  bool has_full_scale() const;
  void clear_full_scale();
  const ::proto::AppMsg_full_scale& full_scale() const;
  ::proto::AppMsg_full_scale* release_full_scale();
  ::proto::AppMsg_full_scale* mutable_full_scale();
  void set_allocated_full_scale(::proto::AppMsg_full_scale* full_scale);

  // .proto.AppMsg.judgement_mode judgement_mode = 6;
  bool has_judgement_mode() const;
  void clear_judgement_mode();
  const ::proto::AppMsg_judgement_mode& judgement_mode() const;
  ::proto::AppMsg_judgement_mode* release_judgement_mode();
  ::proto::AppMsg_judgement_mode* mutable_judgement_mode();
  void set_allocated_judgement_mode(::proto::AppMsg_judgement_mode* judgement_mode);

  // .proto.AppMsg.pzltrct_param pzltrct_param = 7;
  bool has_pzltrct_param() const;
  void clear_pzltrct_param();
  const ::proto::AppMsg_pzltrct_param& pzltrct_param() const;
  ::proto::AppMsg_pzltrct_param* release_pzltrct_param();
  ::proto::AppMsg_pzltrct_param* mutable_pzltrct_param();
  void set_allocated_pzltrct_param(::proto::AppMsg_pzltrct_param* pzltrct_param);

  // .proto.AppMsg.axis_counting_param axis_counting_param = 8;
  bool has_axis_counting_param() const;
  void clear_axis_counting_param();
  const ::proto::AppMsg_axis_counting_param& axis_counting_param() const;
  ::proto::AppMsg_axis_counting_param* release_axis_counting_param();
  ::proto::AppMsg_axis_counting_param* mutable_axis_counting_param();
  void set_allocated_axis_counting_param(::proto::AppMsg_axis_counting_param* axis_counting_param);

  // uint32 channel = 1;
  void clear_channel();
  ::PROTOBUF_NAMESPACE_ID::uint32 channel() const;
  void set_channel(::PROTOBUF_NAMESPACE_ID::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.AppMsg.channel_info)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::proto::AppMsg_zero_offset* zero_offset_;
  ::proto::AppMsg_fault_voltage* fault_voltage_;
  ::proto::AppMsg_abnormal_param* abnormal_param_;
  ::proto::AppMsg_full_scale* full_scale_;
  ::proto::AppMsg_judgement_mode* judgement_mode_;
  ::proto::AppMsg_pzltrct_param* pzltrct_param_;
  ::proto::AppMsg_axis_counting_param* axis_counting_param_;
  ::PROTOBUF_NAMESPACE_ID::uint32 channel_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_AppMsg_2eproto;
};
// -------------------------------------------------------------------

class AppMsg :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:proto.AppMsg) */ {
 public:
  AppMsg();
  virtual ~AppMsg();

  AppMsg(const AppMsg& from);
  AppMsg(AppMsg&& from) noexcept
    : AppMsg() {
    *this = ::std::move(from);
  }

  inline AppMsg& operator=(const AppMsg& from) {
    CopyFrom(from);
    return *this;
  }
  inline AppMsg& operator=(AppMsg&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const AppMsg& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AppMsg* internal_default_instance() {
    return reinterpret_cast<const AppMsg*>(
               &_AppMsg_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    18;

  friend void swap(AppMsg& a, AppMsg& b) {
    a.Swap(&b);
  }
  inline void Swap(AppMsg* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline AppMsg* New() const final {
    return CreateMaybeMessage<AppMsg>(nullptr);
  }

  AppMsg* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<AppMsg>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const AppMsg& from);
  void MergeFrom(const AppMsg& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AppMsg* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "proto.AppMsg";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_AppMsg_2eproto);
    return ::descriptor_table_AppMsg_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  typedef AppMsg_device_add device_add;
  typedef AppMsg_server_add server_add;
  typedef AppMsg_platform_id platform_id;
  typedef AppMsg_station_id station_id;
  typedef AppMsg_turnout_id turnout_id;
  typedef AppMsg_item_id item_id;
  typedef AppMsg_sensor_id sensor_id;
  typedef AppMsg_sample_frequency sample_frequency;
  typedef AppMsg_zero_offset zero_offset;
  typedef AppMsg_fault_voltage fault_voltage;
  typedef AppMsg_abnormal_param abnormal_param;
  typedef AppMsg_full_scale full_scale;
  typedef AppMsg_judgement_mode judgement_mode;
  typedef AppMsg_pzltrct_param pzltrct_param;
  typedef AppMsg_axis_counting_param axis_counting_param;
  typedef AppMsg_sample_card_num sample_card_num;
  typedef AppMsg_adc_data adc_data;
  typedef AppMsg_channel_info channel_info;

  typedef AppMsg_Cmd Cmd;
  static constexpr Cmd NONE =
    AppMsg_Cmd_NONE;
  static constexpr Cmd RESERVED =
    AppMsg_Cmd_RESERVED;
  static constexpr Cmd set_device_add =
    AppMsg_Cmd_set_device_add;
  static constexpr Cmd get_device_add =
    AppMsg_Cmd_get_device_add;
  static constexpr Cmd set_server_add =
    AppMsg_Cmd_set_server_add;
  static constexpr Cmd get_server_add =
    AppMsg_Cmd_get_server_add;
  static constexpr Cmd set_platform_id =
    AppMsg_Cmd_set_platform_id;
  static constexpr Cmd get_platform_id =
    AppMsg_Cmd_get_platform_id;
  static constexpr Cmd set_station_id =
    AppMsg_Cmd_set_station_id;
  static constexpr Cmd get_station_id =
    AppMsg_Cmd_get_station_id;
  static constexpr Cmd set_turnout_id =
    AppMsg_Cmd_set_turnout_id;
  static constexpr Cmd get_turnout_id =
    AppMsg_Cmd_get_turnout_id;
  static constexpr Cmd set_item_id =
    AppMsg_Cmd_set_item_id;
  static constexpr Cmd get_item_id =
    AppMsg_Cmd_get_item_id;
  static constexpr Cmd set_sensor_id =
    AppMsg_Cmd_set_sensor_id;
  static constexpr Cmd get_sensor_id =
    AppMsg_Cmd_get_sensor_id;
  static constexpr Cmd set_sample_frequency =
    AppMsg_Cmd_set_sample_frequency;
  static constexpr Cmd get_sample_frequency =
    AppMsg_Cmd_get_sample_frequency;
  static constexpr Cmd set_zero_offset =
    AppMsg_Cmd_set_zero_offset;
  static constexpr Cmd get_zero_offset =
    AppMsg_Cmd_get_zero_offset;
  static constexpr Cmd set_fault_voltage =
    AppMsg_Cmd_set_fault_voltage;
  static constexpr Cmd get_fault_voltage =
    AppMsg_Cmd_get_fault_voltage;
  static constexpr Cmd set_abnormal_param =
    AppMsg_Cmd_set_abnormal_param;
  static constexpr Cmd get_abnormal_param =
    AppMsg_Cmd_get_abnormal_param;
  static constexpr Cmd set_full_scale =
    AppMsg_Cmd_set_full_scale;
  static constexpr Cmd get_full_scale =
    AppMsg_Cmd_get_full_scale;
  static constexpr Cmd set_judgement_mode =
    AppMsg_Cmd_set_judgement_mode;
  static constexpr Cmd get_judgement_mode =
    AppMsg_Cmd_get_judgement_mode;
  static constexpr Cmd set_pzltrct_param =
    AppMsg_Cmd_set_pzltrct_param;
  static constexpr Cmd get_pzltrct_param =
    AppMsg_Cmd_get_pzltrct_param;
  static constexpr Cmd set_axis_counting_param =
    AppMsg_Cmd_set_axis_counting_param;
  static constexpr Cmd get_axis_counting_param =
    AppMsg_Cmd_get_axis_counting_param;
  static constexpr Cmd set_sample_card_num =
    AppMsg_Cmd_set_sample_card_num;
  static constexpr Cmd get_sample_card_num =
    AppMsg_Cmd_get_sample_card_num;
  static constexpr Cmd capture_adc_data =
    AppMsg_Cmd_capture_adc_data;
  static constexpr Cmd set_capture_auto_state =
    AppMsg_Cmd_set_capture_auto_state;
  static constexpr Cmd get_capture_auto_state =
    AppMsg_Cmd_get_capture_auto_state;
  static constexpr Cmd set_channel_info =
    AppMsg_Cmd_set_channel_info;
  static constexpr Cmd get_channel_info =
    AppMsg_Cmd_get_channel_info;
  static constexpr Cmd auto_adc_data =
    AppMsg_Cmd_auto_adc_data;
  static constexpr Cmd error_msg =
    AppMsg_Cmd_error_msg;
  static inline bool Cmd_IsValid(int value) {
    return AppMsg_Cmd_IsValid(value);
  }
  static constexpr Cmd Cmd_MIN =
    AppMsg_Cmd_Cmd_MIN;
  static constexpr Cmd Cmd_MAX =
    AppMsg_Cmd_Cmd_MAX;
  static constexpr int Cmd_ARRAYSIZE =
    AppMsg_Cmd_Cmd_ARRAYSIZE;
  static inline const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor*
  Cmd_descriptor() {
    return AppMsg_Cmd_descriptor();
  }
  template<typename T>
  static inline const std::string& Cmd_Name(T enum_t_value) {
    static_assert(::std::is_same<T, Cmd>::value ||
      ::std::is_integral<T>::value,
      "Incorrect type passed to function Cmd_Name.");
    return AppMsg_Cmd_Name(enum_t_value);
  }
  static inline bool Cmd_Parse(const std::string& name,
      Cmd* value) {
    return AppMsg_Cmd_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:proto.AppMsg)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_AppMsg_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// AppMsg_device_add

// string ip = 1;
inline void AppMsg_device_add::clear_ip() {
  ip_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& AppMsg_device_add::ip() const {
  // @@protoc_insertion_point(field_get:proto.AppMsg.device_add.ip)
  return ip_.GetNoArena();
}
inline void AppMsg_device_add::set_ip(const std::string& value) {
  
  ip_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.AppMsg.device_add.ip)
}
inline void AppMsg_device_add::set_ip(std::string&& value) {
  
  ip_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.AppMsg.device_add.ip)
}
inline void AppMsg_device_add::set_ip(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  ip_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.AppMsg.device_add.ip)
}
inline void AppMsg_device_add::set_ip(const char* value, size_t size) {
  
  ip_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.AppMsg.device_add.ip)
}
inline std::string* AppMsg_device_add::mutable_ip() {
  
  // @@protoc_insertion_point(field_mutable:proto.AppMsg.device_add.ip)
  return ip_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* AppMsg_device_add::release_ip() {
  // @@protoc_insertion_point(field_release:proto.AppMsg.device_add.ip)
  
  return ip_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void AppMsg_device_add::set_allocated_ip(std::string* ip) {
  if (ip != nullptr) {
    
  } else {
    
  }
  ip_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ip);
  // @@protoc_insertion_point(field_set_allocated:proto.AppMsg.device_add.ip)
}

// string netmask = 2;
inline void AppMsg_device_add::clear_netmask() {
  netmask_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& AppMsg_device_add::netmask() const {
  // @@protoc_insertion_point(field_get:proto.AppMsg.device_add.netmask)
  return netmask_.GetNoArena();
}
inline void AppMsg_device_add::set_netmask(const std::string& value) {
  
  netmask_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.AppMsg.device_add.netmask)
}
inline void AppMsg_device_add::set_netmask(std::string&& value) {
  
  netmask_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.AppMsg.device_add.netmask)
}
inline void AppMsg_device_add::set_netmask(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  netmask_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.AppMsg.device_add.netmask)
}
inline void AppMsg_device_add::set_netmask(const char* value, size_t size) {
  
  netmask_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.AppMsg.device_add.netmask)
}
inline std::string* AppMsg_device_add::mutable_netmask() {
  
  // @@protoc_insertion_point(field_mutable:proto.AppMsg.device_add.netmask)
  return netmask_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* AppMsg_device_add::release_netmask() {
  // @@protoc_insertion_point(field_release:proto.AppMsg.device_add.netmask)
  
  return netmask_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void AppMsg_device_add::set_allocated_netmask(std::string* netmask) {
  if (netmask != nullptr) {
    
  } else {
    
  }
  netmask_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), netmask);
  // @@protoc_insertion_point(field_set_allocated:proto.AppMsg.device_add.netmask)
}

// string gateway = 3;
inline void AppMsg_device_add::clear_gateway() {
  gateway_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& AppMsg_device_add::gateway() const {
  // @@protoc_insertion_point(field_get:proto.AppMsg.device_add.gateway)
  return gateway_.GetNoArena();
}
inline void AppMsg_device_add::set_gateway(const std::string& value) {
  
  gateway_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.AppMsg.device_add.gateway)
}
inline void AppMsg_device_add::set_gateway(std::string&& value) {
  
  gateway_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.AppMsg.device_add.gateway)
}
inline void AppMsg_device_add::set_gateway(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  gateway_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.AppMsg.device_add.gateway)
}
inline void AppMsg_device_add::set_gateway(const char* value, size_t size) {
  
  gateway_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.AppMsg.device_add.gateway)
}
inline std::string* AppMsg_device_add::mutable_gateway() {
  
  // @@protoc_insertion_point(field_mutable:proto.AppMsg.device_add.gateway)
  return gateway_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* AppMsg_device_add::release_gateway() {
  // @@protoc_insertion_point(field_release:proto.AppMsg.device_add.gateway)
  
  return gateway_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void AppMsg_device_add::set_allocated_gateway(std::string* gateway) {
  if (gateway != nullptr) {
    
  } else {
    
  }
  gateway_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), gateway);
  // @@protoc_insertion_point(field_set_allocated:proto.AppMsg.device_add.gateway)
}

// -------------------------------------------------------------------

// AppMsg_server_add

// string ip = 1;
inline void AppMsg_server_add::clear_ip() {
  ip_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& AppMsg_server_add::ip() const {
  // @@protoc_insertion_point(field_get:proto.AppMsg.server_add.ip)
  return ip_.GetNoArena();
}
inline void AppMsg_server_add::set_ip(const std::string& value) {
  
  ip_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.AppMsg.server_add.ip)
}
inline void AppMsg_server_add::set_ip(std::string&& value) {
  
  ip_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.AppMsg.server_add.ip)
}
inline void AppMsg_server_add::set_ip(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  ip_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.AppMsg.server_add.ip)
}
inline void AppMsg_server_add::set_ip(const char* value, size_t size) {
  
  ip_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.AppMsg.server_add.ip)
}
inline std::string* AppMsg_server_add::mutable_ip() {
  
  // @@protoc_insertion_point(field_mutable:proto.AppMsg.server_add.ip)
  return ip_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* AppMsg_server_add::release_ip() {
  // @@protoc_insertion_point(field_release:proto.AppMsg.server_add.ip)
  
  return ip_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void AppMsg_server_add::set_allocated_ip(std::string* ip) {
  if (ip != nullptr) {
    
  } else {
    
  }
  ip_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ip);
  // @@protoc_insertion_point(field_set_allocated:proto.AppMsg.server_add.ip)
}

// uint32 port = 2;
inline void AppMsg_server_add::clear_port() {
  port_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 AppMsg_server_add::port() const {
  // @@protoc_insertion_point(field_get:proto.AppMsg.server_add.port)
  return port_;
}
inline void AppMsg_server_add::set_port(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  port_ = value;
  // @@protoc_insertion_point(field_set:proto.AppMsg.server_add.port)
}

// -------------------------------------------------------------------

// AppMsg_platform_id

// uint32 id = 1;
inline void AppMsg_platform_id::clear_id() {
  id_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 AppMsg_platform_id::id() const {
  // @@protoc_insertion_point(field_get:proto.AppMsg.platform_id.id)
  return id_;
}
inline void AppMsg_platform_id::set_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:proto.AppMsg.platform_id.id)
}

// -------------------------------------------------------------------

// AppMsg_station_id

// uint32 id = 1;
inline void AppMsg_station_id::clear_id() {
  id_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 AppMsg_station_id::id() const {
  // @@protoc_insertion_point(field_get:proto.AppMsg.station_id.id)
  return id_;
}
inline void AppMsg_station_id::set_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:proto.AppMsg.station_id.id)
}

// -------------------------------------------------------------------

// AppMsg_turnout_id

// uint32 id = 1;
inline void AppMsg_turnout_id::clear_id() {
  id_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 AppMsg_turnout_id::id() const {
  // @@protoc_insertion_point(field_get:proto.AppMsg.turnout_id.id)
  return id_;
}
inline void AppMsg_turnout_id::set_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:proto.AppMsg.turnout_id.id)
}

// -------------------------------------------------------------------

// AppMsg_item_id

// uint32 id = 1;
inline void AppMsg_item_id::clear_id() {
  id_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 AppMsg_item_id::id() const {
  // @@protoc_insertion_point(field_get:proto.AppMsg.item_id.id)
  return id_;
}
inline void AppMsg_item_id::set_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:proto.AppMsg.item_id.id)
}

// -------------------------------------------------------------------

// AppMsg_sensor_id

// uint32 channel = 1;
inline void AppMsg_sensor_id::clear_channel() {
  channel_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 AppMsg_sensor_id::channel() const {
  // @@protoc_insertion_point(field_get:proto.AppMsg.sensor_id.channel)
  return channel_;
}
inline void AppMsg_sensor_id::set_channel(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  channel_ = value;
  // @@protoc_insertion_point(field_set:proto.AppMsg.sensor_id.channel)
}

// uint32 id = 2;
inline void AppMsg_sensor_id::clear_id() {
  id_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 AppMsg_sensor_id::id() const {
  // @@protoc_insertion_point(field_get:proto.AppMsg.sensor_id.id)
  return id_;
}
inline void AppMsg_sensor_id::set_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:proto.AppMsg.sensor_id.id)
}

// -------------------------------------------------------------------

// AppMsg_sample_frequency

// uint32 frequency = 1;
inline void AppMsg_sample_frequency::clear_frequency() {
  frequency_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 AppMsg_sample_frequency::frequency() const {
  // @@protoc_insertion_point(field_get:proto.AppMsg.sample_frequency.frequency)
  return frequency_;
}
inline void AppMsg_sample_frequency::set_frequency(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  frequency_ = value;
  // @@protoc_insertion_point(field_set:proto.AppMsg.sample_frequency.frequency)
}

// -------------------------------------------------------------------

// AppMsg_zero_offset

// uint32 channel = 1;
inline void AppMsg_zero_offset::clear_channel() {
  channel_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 AppMsg_zero_offset::channel() const {
  // @@protoc_insertion_point(field_get:proto.AppMsg.zero_offset.channel)
  return channel_;
}
inline void AppMsg_zero_offset::set_channel(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  channel_ = value;
  // @@protoc_insertion_point(field_set:proto.AppMsg.zero_offset.channel)
}

// uint32 offset = 2;
inline void AppMsg_zero_offset::clear_offset() {
  offset_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 AppMsg_zero_offset::offset() const {
  // @@protoc_insertion_point(field_get:proto.AppMsg.zero_offset.offset)
  return offset_;
}
inline void AppMsg_zero_offset::set_offset(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  offset_ = value;
  // @@protoc_insertion_point(field_set:proto.AppMsg.zero_offset.offset)
}

// -------------------------------------------------------------------

// AppMsg_fault_voltage

// double level = 1;
inline void AppMsg_fault_voltage::clear_level() {
  level_ = 0;
}
inline double AppMsg_fault_voltage::level() const {
  // @@protoc_insertion_point(field_get:proto.AppMsg.fault_voltage.level)
  return level_;
}
inline void AppMsg_fault_voltage::set_level(double value) {
  
  level_ = value;
  // @@protoc_insertion_point(field_set:proto.AppMsg.fault_voltage.level)
}

// -------------------------------------------------------------------

// AppMsg_abnormal_param

// double level = 1;
inline void AppMsg_abnormal_param::clear_level() {
  level_ = 0;
}
inline double AppMsg_abnormal_param::level() const {
  // @@protoc_insertion_point(field_get:proto.AppMsg.abnormal_param.level)
  return level_;
}
inline void AppMsg_abnormal_param::set_level(double value) {
  
  level_ = value;
  // @@protoc_insertion_point(field_set:proto.AppMsg.abnormal_param.level)
}

// uint32 duration = 2;
inline void AppMsg_abnormal_param::clear_duration() {
  duration_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 AppMsg_abnormal_param::duration() const {
  // @@protoc_insertion_point(field_get:proto.AppMsg.abnormal_param.duration)
  return duration_;
}
inline void AppMsg_abnormal_param::set_duration(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  duration_ = value;
  // @@protoc_insertion_point(field_set:proto.AppMsg.abnormal_param.duration)
}

// -------------------------------------------------------------------

// AppMsg_full_scale

// uint32 channel = 1;
inline void AppMsg_full_scale::clear_channel() {
  channel_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 AppMsg_full_scale::channel() const {
  // @@protoc_insertion_point(field_get:proto.AppMsg.full_scale.channel)
  return channel_;
}
inline void AppMsg_full_scale::set_channel(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  channel_ = value;
  // @@protoc_insertion_point(field_set:proto.AppMsg.full_scale.channel)
}

// int32 scale = 2;
inline void AppMsg_full_scale::clear_scale() {
  scale_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 AppMsg_full_scale::scale() const {
  // @@protoc_insertion_point(field_get:proto.AppMsg.full_scale.scale)
  return scale_;
}
inline void AppMsg_full_scale::set_scale(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  scale_ = value;
  // @@protoc_insertion_point(field_set:proto.AppMsg.full_scale.scale)
}

// -------------------------------------------------------------------

// AppMsg_judgement_mode

// string mode = 1;
inline void AppMsg_judgement_mode::clear_mode() {
  mode_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& AppMsg_judgement_mode::mode() const {
  // @@protoc_insertion_point(field_get:proto.AppMsg.judgement_mode.mode)
  return mode_.GetNoArena();
}
inline void AppMsg_judgement_mode::set_mode(const std::string& value) {
  
  mode_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.AppMsg.judgement_mode.mode)
}
inline void AppMsg_judgement_mode::set_mode(std::string&& value) {
  
  mode_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.AppMsg.judgement_mode.mode)
}
inline void AppMsg_judgement_mode::set_mode(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  mode_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.AppMsg.judgement_mode.mode)
}
inline void AppMsg_judgement_mode::set_mode(const char* value, size_t size) {
  
  mode_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.AppMsg.judgement_mode.mode)
}
inline std::string* AppMsg_judgement_mode::mutable_mode() {
  
  // @@protoc_insertion_point(field_mutable:proto.AppMsg.judgement_mode.mode)
  return mode_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* AppMsg_judgement_mode::release_mode() {
  // @@protoc_insertion_point(field_release:proto.AppMsg.judgement_mode.mode)
  
  return mode_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void AppMsg_judgement_mode::set_allocated_mode(std::string* mode) {
  if (mode != nullptr) {
    
  } else {
    
  }
  mode_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), mode);
  // @@protoc_insertion_point(field_set_allocated:proto.AppMsg.judgement_mode.mode)
}

// -------------------------------------------------------------------

// AppMsg_pzltrct_param

// uint32 threshold = 1;
inline void AppMsg_pzltrct_param::clear_threshold() {
  threshold_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 AppMsg_pzltrct_param::threshold() const {
  // @@protoc_insertion_point(field_get:proto.AppMsg.pzltrct_param.threshold)
  return threshold_;
}
inline void AppMsg_pzltrct_param::set_threshold(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  threshold_ = value;
  // @@protoc_insertion_point(field_set:proto.AppMsg.pzltrct_param.threshold)
}

// uint32 duration = 2;
inline void AppMsg_pzltrct_param::clear_duration() {
  duration_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 AppMsg_pzltrct_param::duration() const {
  // @@protoc_insertion_point(field_get:proto.AppMsg.pzltrct_param.duration)
  return duration_;
}
inline void AppMsg_pzltrct_param::set_duration(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  duration_ = value;
  // @@protoc_insertion_point(field_set:proto.AppMsg.pzltrct_param.duration)
}

// -------------------------------------------------------------------

// AppMsg_axis_counting_param

// uint32 duration = 1;
inline void AppMsg_axis_counting_param::clear_duration() {
  duration_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 AppMsg_axis_counting_param::duration() const {
  // @@protoc_insertion_point(field_get:proto.AppMsg.axis_counting_param.duration)
  return duration_;
}
inline void AppMsg_axis_counting_param::set_duration(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  duration_ = value;
  // @@protoc_insertion_point(field_set:proto.AppMsg.axis_counting_param.duration)
}

// -------------------------------------------------------------------

// AppMsg_sample_card_num

// uint32 num = 1;
inline void AppMsg_sample_card_num::clear_num() {
  num_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 AppMsg_sample_card_num::num() const {
  // @@protoc_insertion_point(field_get:proto.AppMsg.sample_card_num.num)
  return num_;
}
inline void AppMsg_sample_card_num::set_num(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  num_ = value;
  // @@protoc_insertion_point(field_set:proto.AppMsg.sample_card_num.num)
}

// -------------------------------------------------------------------

// AppMsg_adc_data

// uint64 time = 1;
inline void AppMsg_adc_data::clear_time() {
  time_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 AppMsg_adc_data::time() const {
  // @@protoc_insertion_point(field_get:proto.AppMsg.adc_data.time)
  return time_;
}
inline void AppMsg_adc_data::set_time(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  time_ = value;
  // @@protoc_insertion_point(field_set:proto.AppMsg.adc_data.time)
}

// uint32 sample_card_num = 2;
inline void AppMsg_adc_data::clear_sample_card_num() {
  sample_card_num_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 AppMsg_adc_data::sample_card_num() const {
  // @@protoc_insertion_point(field_get:proto.AppMsg.adc_data.sample_card_num)
  return sample_card_num_;
}
inline void AppMsg_adc_data::set_sample_card_num(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  sample_card_num_ = value;
  // @@protoc_insertion_point(field_set:proto.AppMsg.adc_data.sample_card_num)
}

// uint32 sample_frequency = 3;
inline void AppMsg_adc_data::clear_sample_frequency() {
  sample_frequency_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 AppMsg_adc_data::sample_frequency() const {
  // @@protoc_insertion_point(field_get:proto.AppMsg.adc_data.sample_frequency)
  return sample_frequency_;
}
inline void AppMsg_adc_data::set_sample_frequency(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  sample_frequency_ = value;
  // @@protoc_insertion_point(field_set:proto.AppMsg.adc_data.sample_frequency)
}

// uint32 sample_number = 4;
inline void AppMsg_adc_data::clear_sample_number() {
  sample_number_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 AppMsg_adc_data::sample_number() const {
  // @@protoc_insertion_point(field_get:proto.AppMsg.adc_data.sample_number)
  return sample_number_;
}
inline void AppMsg_adc_data::set_sample_number(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  sample_number_ = value;
  // @@protoc_insertion_point(field_set:proto.AppMsg.adc_data.sample_number)
}

// bytes data = 9;
inline void AppMsg_adc_data::clear_data() {
  data_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& AppMsg_adc_data::data() const {
  // @@protoc_insertion_point(field_get:proto.AppMsg.adc_data.data)
  return data_.GetNoArena();
}
inline void AppMsg_adc_data::set_data(const std::string& value) {
  
  data_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.AppMsg.adc_data.data)
}
inline void AppMsg_adc_data::set_data(std::string&& value) {
  
  data_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.AppMsg.adc_data.data)
}
inline void AppMsg_adc_data::set_data(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  data_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.AppMsg.adc_data.data)
}
inline void AppMsg_adc_data::set_data(const void* value, size_t size) {
  
  data_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.AppMsg.adc_data.data)
}
inline std::string* AppMsg_adc_data::mutable_data() {
  
  // @@protoc_insertion_point(field_mutable:proto.AppMsg.adc_data.data)
  return data_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* AppMsg_adc_data::release_data() {
  // @@protoc_insertion_point(field_release:proto.AppMsg.adc_data.data)
  
  return data_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void AppMsg_adc_data::set_allocated_data(std::string* data) {
  if (data != nullptr) {
    
  } else {
    
  }
  data_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:proto.AppMsg.adc_data.data)
}

// .proto.AppMsg.platform_id platform_id = 10;
inline bool AppMsg_adc_data::has_platform_id() const {
  return this != internal_default_instance() && platform_id_ != nullptr;
}
inline void AppMsg_adc_data::clear_platform_id() {
  if (GetArenaNoVirtual() == nullptr && platform_id_ != nullptr) {
    delete platform_id_;
  }
  platform_id_ = nullptr;
}
inline const ::proto::AppMsg_platform_id& AppMsg_adc_data::platform_id() const {
  const ::proto::AppMsg_platform_id* p = platform_id_;
  // @@protoc_insertion_point(field_get:proto.AppMsg.adc_data.platform_id)
  return p != nullptr ? *p : *reinterpret_cast<const ::proto::AppMsg_platform_id*>(
      &::proto::_AppMsg_platform_id_default_instance_);
}
inline ::proto::AppMsg_platform_id* AppMsg_adc_data::release_platform_id() {
  // @@protoc_insertion_point(field_release:proto.AppMsg.adc_data.platform_id)
  
  ::proto::AppMsg_platform_id* temp = platform_id_;
  platform_id_ = nullptr;
  return temp;
}
inline ::proto::AppMsg_platform_id* AppMsg_adc_data::mutable_platform_id() {
  
  if (platform_id_ == nullptr) {
    auto* p = CreateMaybeMessage<::proto::AppMsg_platform_id>(GetArenaNoVirtual());
    platform_id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:proto.AppMsg.adc_data.platform_id)
  return platform_id_;
}
inline void AppMsg_adc_data::set_allocated_platform_id(::proto::AppMsg_platform_id* platform_id) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete platform_id_;
  }
  if (platform_id) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      platform_id = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, platform_id, submessage_arena);
    }
    
  } else {
    
  }
  platform_id_ = platform_id;
  // @@protoc_insertion_point(field_set_allocated:proto.AppMsg.adc_data.platform_id)
}

// .proto.AppMsg.station_id station_id = 11;
inline bool AppMsg_adc_data::has_station_id() const {
  return this != internal_default_instance() && station_id_ != nullptr;
}
inline void AppMsg_adc_data::clear_station_id() {
  if (GetArenaNoVirtual() == nullptr && station_id_ != nullptr) {
    delete station_id_;
  }
  station_id_ = nullptr;
}
inline const ::proto::AppMsg_station_id& AppMsg_adc_data::station_id() const {
  const ::proto::AppMsg_station_id* p = station_id_;
  // @@protoc_insertion_point(field_get:proto.AppMsg.adc_data.station_id)
  return p != nullptr ? *p : *reinterpret_cast<const ::proto::AppMsg_station_id*>(
      &::proto::_AppMsg_station_id_default_instance_);
}
inline ::proto::AppMsg_station_id* AppMsg_adc_data::release_station_id() {
  // @@protoc_insertion_point(field_release:proto.AppMsg.adc_data.station_id)
  
  ::proto::AppMsg_station_id* temp = station_id_;
  station_id_ = nullptr;
  return temp;
}
inline ::proto::AppMsg_station_id* AppMsg_adc_data::mutable_station_id() {
  
  if (station_id_ == nullptr) {
    auto* p = CreateMaybeMessage<::proto::AppMsg_station_id>(GetArenaNoVirtual());
    station_id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:proto.AppMsg.adc_data.station_id)
  return station_id_;
}
inline void AppMsg_adc_data::set_allocated_station_id(::proto::AppMsg_station_id* station_id) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete station_id_;
  }
  if (station_id) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      station_id = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, station_id, submessage_arena);
    }
    
  } else {
    
  }
  station_id_ = station_id;
  // @@protoc_insertion_point(field_set_allocated:proto.AppMsg.adc_data.station_id)
}

// .proto.AppMsg.turnout_id turnout_id = 12;
inline bool AppMsg_adc_data::has_turnout_id() const {
  return this != internal_default_instance() && turnout_id_ != nullptr;
}
inline void AppMsg_adc_data::clear_turnout_id() {
  if (GetArenaNoVirtual() == nullptr && turnout_id_ != nullptr) {
    delete turnout_id_;
  }
  turnout_id_ = nullptr;
}
inline const ::proto::AppMsg_turnout_id& AppMsg_adc_data::turnout_id() const {
  const ::proto::AppMsg_turnout_id* p = turnout_id_;
  // @@protoc_insertion_point(field_get:proto.AppMsg.adc_data.turnout_id)
  return p != nullptr ? *p : *reinterpret_cast<const ::proto::AppMsg_turnout_id*>(
      &::proto::_AppMsg_turnout_id_default_instance_);
}
inline ::proto::AppMsg_turnout_id* AppMsg_adc_data::release_turnout_id() {
  // @@protoc_insertion_point(field_release:proto.AppMsg.adc_data.turnout_id)
  
  ::proto::AppMsg_turnout_id* temp = turnout_id_;
  turnout_id_ = nullptr;
  return temp;
}
inline ::proto::AppMsg_turnout_id* AppMsg_adc_data::mutable_turnout_id() {
  
  if (turnout_id_ == nullptr) {
    auto* p = CreateMaybeMessage<::proto::AppMsg_turnout_id>(GetArenaNoVirtual());
    turnout_id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:proto.AppMsg.adc_data.turnout_id)
  return turnout_id_;
}
inline void AppMsg_adc_data::set_allocated_turnout_id(::proto::AppMsg_turnout_id* turnout_id) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete turnout_id_;
  }
  if (turnout_id) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      turnout_id = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, turnout_id, submessage_arena);
    }
    
  } else {
    
  }
  turnout_id_ = turnout_id;
  // @@protoc_insertion_point(field_set_allocated:proto.AppMsg.adc_data.turnout_id)
}

// .proto.AppMsg.item_id item_id = 13;
inline bool AppMsg_adc_data::has_item_id() const {
  return this != internal_default_instance() && item_id_ != nullptr;
}
inline void AppMsg_adc_data::clear_item_id() {
  if (GetArenaNoVirtual() == nullptr && item_id_ != nullptr) {
    delete item_id_;
  }
  item_id_ = nullptr;
}
inline const ::proto::AppMsg_item_id& AppMsg_adc_data::item_id() const {
  const ::proto::AppMsg_item_id* p = item_id_;
  // @@protoc_insertion_point(field_get:proto.AppMsg.adc_data.item_id)
  return p != nullptr ? *p : *reinterpret_cast<const ::proto::AppMsg_item_id*>(
      &::proto::_AppMsg_item_id_default_instance_);
}
inline ::proto::AppMsg_item_id* AppMsg_adc_data::release_item_id() {
  // @@protoc_insertion_point(field_release:proto.AppMsg.adc_data.item_id)
  
  ::proto::AppMsg_item_id* temp = item_id_;
  item_id_ = nullptr;
  return temp;
}
inline ::proto::AppMsg_item_id* AppMsg_adc_data::mutable_item_id() {
  
  if (item_id_ == nullptr) {
    auto* p = CreateMaybeMessage<::proto::AppMsg_item_id>(GetArenaNoVirtual());
    item_id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:proto.AppMsg.adc_data.item_id)
  return item_id_;
}
inline void AppMsg_adc_data::set_allocated_item_id(::proto::AppMsg_item_id* item_id) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete item_id_;
  }
  if (item_id) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      item_id = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, item_id, submessage_arena);
    }
    
  } else {
    
  }
  item_id_ = item_id;
  // @@protoc_insertion_point(field_set_allocated:proto.AppMsg.adc_data.item_id)
}

// -------------------------------------------------------------------

// AppMsg_channel_info

// uint32 channel = 1;
inline void AppMsg_channel_info::clear_channel() {
  channel_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 AppMsg_channel_info::channel() const {
  // @@protoc_insertion_point(field_get:proto.AppMsg.channel_info.channel)
  return channel_;
}
inline void AppMsg_channel_info::set_channel(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  channel_ = value;
  // @@protoc_insertion_point(field_set:proto.AppMsg.channel_info.channel)
}

// .proto.AppMsg.zero_offset zero_offset = 2;
inline bool AppMsg_channel_info::has_zero_offset() const {
  return this != internal_default_instance() && zero_offset_ != nullptr;
}
inline void AppMsg_channel_info::clear_zero_offset() {
  if (GetArenaNoVirtual() == nullptr && zero_offset_ != nullptr) {
    delete zero_offset_;
  }
  zero_offset_ = nullptr;
}
inline const ::proto::AppMsg_zero_offset& AppMsg_channel_info::zero_offset() const {
  const ::proto::AppMsg_zero_offset* p = zero_offset_;
  // @@protoc_insertion_point(field_get:proto.AppMsg.channel_info.zero_offset)
  return p != nullptr ? *p : *reinterpret_cast<const ::proto::AppMsg_zero_offset*>(
      &::proto::_AppMsg_zero_offset_default_instance_);
}
inline ::proto::AppMsg_zero_offset* AppMsg_channel_info::release_zero_offset() {
  // @@protoc_insertion_point(field_release:proto.AppMsg.channel_info.zero_offset)
  
  ::proto::AppMsg_zero_offset* temp = zero_offset_;
  zero_offset_ = nullptr;
  return temp;
}
inline ::proto::AppMsg_zero_offset* AppMsg_channel_info::mutable_zero_offset() {
  
  if (zero_offset_ == nullptr) {
    auto* p = CreateMaybeMessage<::proto::AppMsg_zero_offset>(GetArenaNoVirtual());
    zero_offset_ = p;
  }
  // @@protoc_insertion_point(field_mutable:proto.AppMsg.channel_info.zero_offset)
  return zero_offset_;
}
inline void AppMsg_channel_info::set_allocated_zero_offset(::proto::AppMsg_zero_offset* zero_offset) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete zero_offset_;
  }
  if (zero_offset) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      zero_offset = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, zero_offset, submessage_arena);
    }
    
  } else {
    
  }
  zero_offset_ = zero_offset;
  // @@protoc_insertion_point(field_set_allocated:proto.AppMsg.channel_info.zero_offset)
}

// .proto.AppMsg.fault_voltage fault_voltage = 3;
inline bool AppMsg_channel_info::has_fault_voltage() const {
  return this != internal_default_instance() && fault_voltage_ != nullptr;
}
inline void AppMsg_channel_info::clear_fault_voltage() {
  if (GetArenaNoVirtual() == nullptr && fault_voltage_ != nullptr) {
    delete fault_voltage_;
  }
  fault_voltage_ = nullptr;
}
inline const ::proto::AppMsg_fault_voltage& AppMsg_channel_info::fault_voltage() const {
  const ::proto::AppMsg_fault_voltage* p = fault_voltage_;
  // @@protoc_insertion_point(field_get:proto.AppMsg.channel_info.fault_voltage)
  return p != nullptr ? *p : *reinterpret_cast<const ::proto::AppMsg_fault_voltage*>(
      &::proto::_AppMsg_fault_voltage_default_instance_);
}
inline ::proto::AppMsg_fault_voltage* AppMsg_channel_info::release_fault_voltage() {
  // @@protoc_insertion_point(field_release:proto.AppMsg.channel_info.fault_voltage)
  
  ::proto::AppMsg_fault_voltage* temp = fault_voltage_;
  fault_voltage_ = nullptr;
  return temp;
}
inline ::proto::AppMsg_fault_voltage* AppMsg_channel_info::mutable_fault_voltage() {
  
  if (fault_voltage_ == nullptr) {
    auto* p = CreateMaybeMessage<::proto::AppMsg_fault_voltage>(GetArenaNoVirtual());
    fault_voltage_ = p;
  }
  // @@protoc_insertion_point(field_mutable:proto.AppMsg.channel_info.fault_voltage)
  return fault_voltage_;
}
inline void AppMsg_channel_info::set_allocated_fault_voltage(::proto::AppMsg_fault_voltage* fault_voltage) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete fault_voltage_;
  }
  if (fault_voltage) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      fault_voltage = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, fault_voltage, submessage_arena);
    }
    
  } else {
    
  }
  fault_voltage_ = fault_voltage;
  // @@protoc_insertion_point(field_set_allocated:proto.AppMsg.channel_info.fault_voltage)
}

// .proto.AppMsg.abnormal_param abnormal_param = 4;
inline bool AppMsg_channel_info::has_abnormal_param() const {
  return this != internal_default_instance() && abnormal_param_ != nullptr;
}
inline void AppMsg_channel_info::clear_abnormal_param() {
  if (GetArenaNoVirtual() == nullptr && abnormal_param_ != nullptr) {
    delete abnormal_param_;
  }
  abnormal_param_ = nullptr;
}
inline const ::proto::AppMsg_abnormal_param& AppMsg_channel_info::abnormal_param() const {
  const ::proto::AppMsg_abnormal_param* p = abnormal_param_;
  // @@protoc_insertion_point(field_get:proto.AppMsg.channel_info.abnormal_param)
  return p != nullptr ? *p : *reinterpret_cast<const ::proto::AppMsg_abnormal_param*>(
      &::proto::_AppMsg_abnormal_param_default_instance_);
}
inline ::proto::AppMsg_abnormal_param* AppMsg_channel_info::release_abnormal_param() {
  // @@protoc_insertion_point(field_release:proto.AppMsg.channel_info.abnormal_param)
  
  ::proto::AppMsg_abnormal_param* temp = abnormal_param_;
  abnormal_param_ = nullptr;
  return temp;
}
inline ::proto::AppMsg_abnormal_param* AppMsg_channel_info::mutable_abnormal_param() {
  
  if (abnormal_param_ == nullptr) {
    auto* p = CreateMaybeMessage<::proto::AppMsg_abnormal_param>(GetArenaNoVirtual());
    abnormal_param_ = p;
  }
  // @@protoc_insertion_point(field_mutable:proto.AppMsg.channel_info.abnormal_param)
  return abnormal_param_;
}
inline void AppMsg_channel_info::set_allocated_abnormal_param(::proto::AppMsg_abnormal_param* abnormal_param) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete abnormal_param_;
  }
  if (abnormal_param) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      abnormal_param = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, abnormal_param, submessage_arena);
    }
    
  } else {
    
  }
  abnormal_param_ = abnormal_param;
  // @@protoc_insertion_point(field_set_allocated:proto.AppMsg.channel_info.abnormal_param)
}

// .proto.AppMsg.full_scale full_scale = 5;
inline bool AppMsg_channel_info::has_full_scale() const {
  return this != internal_default_instance() && full_scale_ != nullptr;
}
inline void AppMsg_channel_info::clear_full_scale() {
  if (GetArenaNoVirtual() == nullptr && full_scale_ != nullptr) {
    delete full_scale_;
  }
  full_scale_ = nullptr;
}
inline const ::proto::AppMsg_full_scale& AppMsg_channel_info::full_scale() const {
  const ::proto::AppMsg_full_scale* p = full_scale_;
  // @@protoc_insertion_point(field_get:proto.AppMsg.channel_info.full_scale)
  return p != nullptr ? *p : *reinterpret_cast<const ::proto::AppMsg_full_scale*>(
      &::proto::_AppMsg_full_scale_default_instance_);
}
inline ::proto::AppMsg_full_scale* AppMsg_channel_info::release_full_scale() {
  // @@protoc_insertion_point(field_release:proto.AppMsg.channel_info.full_scale)
  
  ::proto::AppMsg_full_scale* temp = full_scale_;
  full_scale_ = nullptr;
  return temp;
}
inline ::proto::AppMsg_full_scale* AppMsg_channel_info::mutable_full_scale() {
  
  if (full_scale_ == nullptr) {
    auto* p = CreateMaybeMessage<::proto::AppMsg_full_scale>(GetArenaNoVirtual());
    full_scale_ = p;
  }
  // @@protoc_insertion_point(field_mutable:proto.AppMsg.channel_info.full_scale)
  return full_scale_;
}
inline void AppMsg_channel_info::set_allocated_full_scale(::proto::AppMsg_full_scale* full_scale) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete full_scale_;
  }
  if (full_scale) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      full_scale = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, full_scale, submessage_arena);
    }
    
  } else {
    
  }
  full_scale_ = full_scale;
  // @@protoc_insertion_point(field_set_allocated:proto.AppMsg.channel_info.full_scale)
}

// .proto.AppMsg.judgement_mode judgement_mode = 6;
inline bool AppMsg_channel_info::has_judgement_mode() const {
  return this != internal_default_instance() && judgement_mode_ != nullptr;
}
inline void AppMsg_channel_info::clear_judgement_mode() {
  if (GetArenaNoVirtual() == nullptr && judgement_mode_ != nullptr) {
    delete judgement_mode_;
  }
  judgement_mode_ = nullptr;
}
inline const ::proto::AppMsg_judgement_mode& AppMsg_channel_info::judgement_mode() const {
  const ::proto::AppMsg_judgement_mode* p = judgement_mode_;
  // @@protoc_insertion_point(field_get:proto.AppMsg.channel_info.judgement_mode)
  return p != nullptr ? *p : *reinterpret_cast<const ::proto::AppMsg_judgement_mode*>(
      &::proto::_AppMsg_judgement_mode_default_instance_);
}
inline ::proto::AppMsg_judgement_mode* AppMsg_channel_info::release_judgement_mode() {
  // @@protoc_insertion_point(field_release:proto.AppMsg.channel_info.judgement_mode)
  
  ::proto::AppMsg_judgement_mode* temp = judgement_mode_;
  judgement_mode_ = nullptr;
  return temp;
}
inline ::proto::AppMsg_judgement_mode* AppMsg_channel_info::mutable_judgement_mode() {
  
  if (judgement_mode_ == nullptr) {
    auto* p = CreateMaybeMessage<::proto::AppMsg_judgement_mode>(GetArenaNoVirtual());
    judgement_mode_ = p;
  }
  // @@protoc_insertion_point(field_mutable:proto.AppMsg.channel_info.judgement_mode)
  return judgement_mode_;
}
inline void AppMsg_channel_info::set_allocated_judgement_mode(::proto::AppMsg_judgement_mode* judgement_mode) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete judgement_mode_;
  }
  if (judgement_mode) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      judgement_mode = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, judgement_mode, submessage_arena);
    }
    
  } else {
    
  }
  judgement_mode_ = judgement_mode;
  // @@protoc_insertion_point(field_set_allocated:proto.AppMsg.channel_info.judgement_mode)
}

// .proto.AppMsg.pzltrct_param pzltrct_param = 7;
inline bool AppMsg_channel_info::has_pzltrct_param() const {
  return this != internal_default_instance() && pzltrct_param_ != nullptr;
}
inline void AppMsg_channel_info::clear_pzltrct_param() {
  if (GetArenaNoVirtual() == nullptr && pzltrct_param_ != nullptr) {
    delete pzltrct_param_;
  }
  pzltrct_param_ = nullptr;
}
inline const ::proto::AppMsg_pzltrct_param& AppMsg_channel_info::pzltrct_param() const {
  const ::proto::AppMsg_pzltrct_param* p = pzltrct_param_;
  // @@protoc_insertion_point(field_get:proto.AppMsg.channel_info.pzltrct_param)
  return p != nullptr ? *p : *reinterpret_cast<const ::proto::AppMsg_pzltrct_param*>(
      &::proto::_AppMsg_pzltrct_param_default_instance_);
}
inline ::proto::AppMsg_pzltrct_param* AppMsg_channel_info::release_pzltrct_param() {
  // @@protoc_insertion_point(field_release:proto.AppMsg.channel_info.pzltrct_param)
  
  ::proto::AppMsg_pzltrct_param* temp = pzltrct_param_;
  pzltrct_param_ = nullptr;
  return temp;
}
inline ::proto::AppMsg_pzltrct_param* AppMsg_channel_info::mutable_pzltrct_param() {
  
  if (pzltrct_param_ == nullptr) {
    auto* p = CreateMaybeMessage<::proto::AppMsg_pzltrct_param>(GetArenaNoVirtual());
    pzltrct_param_ = p;
  }
  // @@protoc_insertion_point(field_mutable:proto.AppMsg.channel_info.pzltrct_param)
  return pzltrct_param_;
}
inline void AppMsg_channel_info::set_allocated_pzltrct_param(::proto::AppMsg_pzltrct_param* pzltrct_param) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete pzltrct_param_;
  }
  if (pzltrct_param) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      pzltrct_param = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, pzltrct_param, submessage_arena);
    }
    
  } else {
    
  }
  pzltrct_param_ = pzltrct_param;
  // @@protoc_insertion_point(field_set_allocated:proto.AppMsg.channel_info.pzltrct_param)
}

// .proto.AppMsg.axis_counting_param axis_counting_param = 8;
inline bool AppMsg_channel_info::has_axis_counting_param() const {
  return this != internal_default_instance() && axis_counting_param_ != nullptr;
}
inline void AppMsg_channel_info::clear_axis_counting_param() {
  if (GetArenaNoVirtual() == nullptr && axis_counting_param_ != nullptr) {
    delete axis_counting_param_;
  }
  axis_counting_param_ = nullptr;
}
inline const ::proto::AppMsg_axis_counting_param& AppMsg_channel_info::axis_counting_param() const {
  const ::proto::AppMsg_axis_counting_param* p = axis_counting_param_;
  // @@protoc_insertion_point(field_get:proto.AppMsg.channel_info.axis_counting_param)
  return p != nullptr ? *p : *reinterpret_cast<const ::proto::AppMsg_axis_counting_param*>(
      &::proto::_AppMsg_axis_counting_param_default_instance_);
}
inline ::proto::AppMsg_axis_counting_param* AppMsg_channel_info::release_axis_counting_param() {
  // @@protoc_insertion_point(field_release:proto.AppMsg.channel_info.axis_counting_param)
  
  ::proto::AppMsg_axis_counting_param* temp = axis_counting_param_;
  axis_counting_param_ = nullptr;
  return temp;
}
inline ::proto::AppMsg_axis_counting_param* AppMsg_channel_info::mutable_axis_counting_param() {
  
  if (axis_counting_param_ == nullptr) {
    auto* p = CreateMaybeMessage<::proto::AppMsg_axis_counting_param>(GetArenaNoVirtual());
    axis_counting_param_ = p;
  }
  // @@protoc_insertion_point(field_mutable:proto.AppMsg.channel_info.axis_counting_param)
  return axis_counting_param_;
}
inline void AppMsg_channel_info::set_allocated_axis_counting_param(::proto::AppMsg_axis_counting_param* axis_counting_param) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete axis_counting_param_;
  }
  if (axis_counting_param) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      axis_counting_param = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, axis_counting_param, submessage_arena);
    }
    
  } else {
    
  }
  axis_counting_param_ = axis_counting_param;
  // @@protoc_insertion_point(field_set_allocated:proto.AppMsg.channel_info.axis_counting_param)
}

// -------------------------------------------------------------------

// AppMsg

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace proto

PROTOBUF_NAMESPACE_OPEN

template <> struct is_proto_enum< ::proto::AppMsg_Cmd> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::AppMsg_Cmd>() {
  return ::proto::AppMsg_Cmd_descriptor();
}

PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_AppMsg_2eproto
