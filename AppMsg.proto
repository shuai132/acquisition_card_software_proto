syntax = "proto3";
package proto;

message AppMsg {
    enum Cmd {
        // 库保留部分
        NONE = 0;
        RESERVED = 10;

        // 上位机对工控板命令
        set_device_add = 11;    // 设置数据采集模块的IP地址、子网掩码、网关地址
        get_device_add = 12;

        set_server_add = 13;    // 设置服务器的IPV4地址和端口
        get_server_add = 14;

        set_platform_id = 15;   // 设置平台ID
        get_platform_id = 16;

        set_station_id = 17;    // 设置车站主机ID
        get_station_id = 18;

        set_turnout_id = 19;    // 设置道岔ID
        get_turnout_id = 20;

        set_item_id = 21;       // 设置监测项目ID
        get_item_id = 22;

        set_sample_frequency = 25;  // 设置数据采集模块的低速采样频率
        get_sample_frequency = 26;

        set_pass_param = 37;        // 设置压电传感器判断过车算法使用的参数：过车电压阀值和过车时长阀值。Threshold:以伏为单位的电压值。Duration:以毫秒为单位的时间。
        get_pass_param = 38;

        set_sample_card_num = 41;   // 设置启用的采集卡数量
        get_sample_card_num = 42;

        capture_adc_data = 43;          // 主动采集一次ADC数据

        set_channel_info = 46;
        get_channel_info = 47;          // 通道信息 参数Int32Value

        set_file_cache_enable = 49;     // 设置开启/关闭文件缓存
        get_file_cache_enable = 50;

        // 工控板对上位机命令
        auto_adc_data = 1000;           // 自动采集的ADC数据

        error_msg = 1001;               // 错误消息 StringValue

        ready_received_cache = 1002;    // 返回是否准备好接收缓存数据

        pass_duration_trigger = 1003;   // 过车时长阈值触发
    }

    message device_add {
        string ip = 1;
        string netmask = 2;
        string gateway = 3;
    }

    message server_add {
        string ip = 1;
        uint32 port = 2;
    }

    message platform_id {
        string id = 1;
    }

    message station_id {
        string id = 1;
    }

    message turnout_id {
        string id = 1;
    }

    message item_id {
        string id = 1;
    }

    // 低速采用频率
    message sample_frequency {
        uint32 frequency = 1;
    }

    // 异常参数 每个通道独立
    message abnormal_param {
        uint32 level = 1;
        uint32 duration = 2;
    }

    // 过车参数 所有通道公用
    message pass_param {
        uint32 threshold = 1;
        uint32 duration = 2;
    }

    message sample_card_num {
        uint32 num = 1;
    }

    message file_cache_enable {
        bool enable = 1;
    }

    // 采样数据包
    message adc_data {
        uint64 time = 1;                            // 数据采样时间ms
        uint32 sample_card_num = 2;                 // 采集板数量 每个4通道
        uint32 sample_frequency = 3;                // 采样频率Hz
        uint32 sample_number = 4;                   // 采样点数
        repeated bytes data = 5;                    // 根据sample_card_num 每个通道占一个下标 如data[0]是通道0的数据
        repeated channel_info channel_info = 6;     // 根据sample_card_num 每个通道占一个下标
        platform_id platform_id = 7;
        station_id station_id = 8;
        turnout_id turnout_id = 9;
        item_id item_id = 10;
    }

    message channel_info {
        uint32 channel = 1;                         // 通道ID(0~15)
        uint32 offset_zero = 2;                     // 零点AD值
        uint32 offset_max_vol = 3;                  // 最大采集电压值/mV
        uint32 offset_max_vol_ad = 4;               // 最大采集电压时的AD值
        uint32 fault_voltage = 5;                   // 故障电压/mV
        abnormal_param abnormal_param = 6;          // 异常参数
    }
}
